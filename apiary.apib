FORMAT: 1A
HOST: https://cluster.production.imp.mobilitaetsdienste.de:8443

# IMP North. Implemented & Dredd testable
This is the API specified in new apiary format 1A.


# Group Bike Sharing
This is a group of all bike sharing related REST resources.
    

## Bike Sharing Stations [/imp-endpoint/api/V2/Resources/BikeSharing/Stations?lat={lat}&lng={lng}&radius={radius}&filter={filter}]    
This collection contains a list of all bike sharing stations in an area of interest specified by query parameters.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})
* an (optional) full text filter (filter={filter})

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format for, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The data structure of the response contains the following attributes: 

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | Available actions
id | Number | Internal bike sharing station identification number
description | String | Approximate location
type | String | Type of bike sharing station
uri | URI | URI to request more details.
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
availability | Double | Availability in percentage
operator | String | Resource operator
phoneNo | String | 
operatorURI | String |
operatorName | String | Resource operator
address | Object | 
numberOfBikes | Number | Number of bikes or storing positions
numberOfFreeBikes | Number | Number of currently available bikes
services | Array | 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request.

Parts of the data structure might be omitted if the information is not available. 
    

### Getting bike stations [GET]
@testable

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `500`) ... radius in meter. Has example value.
    + filter (optional, string, `Berlin`) ... free text filter value. Multiple strings are combined by or. Examples `Berlin`, `{Berlin}`, `{Berlin Mitte}`
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)

        {
            "metaData": [
                {
                    "serviceAlias": "callabike",
                    "lastUpdateTime": "2014-07-10T14:23:11+02:00",
                    "messages": []
                },
                {
                    "serviceAlias": "nextbike",
                    "lastUpdateTime": "2014-07-10T14:11:02+02:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [
                        {
                            "name": "book",
                            "method": "POST",
                            "uri": "Resources/BikeSharing/Stations/220/Process?action=book"
                        }
                    ],
                    "id": 220,
                    "description": "S. + U.-Bahnhof/ Friedrichstr.",
                    "type": "BikeSharingStation",
                    "uri": "Resources/BikeSharing/Stations/220",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.3881497383118,
                            52.5203730427629
                        ]
                    },
                    "provider": "nextbike",
                    "availability": 0,
                    "operator": "NextBike",
                    "phoneNo": null,
                    "operatorURI": null,
                    "operatorName": "NextBike",
                    "address": {
                        "citycode": null,
                        "city": "Berlin",
                        "street": null,
                        "houseno": null,
                        "district": null,
                        "region": null,
                        "country": null
                    },
                    "numberOfBikes": null,
                    "numberOfFreeBikes": 0,
                    "services": null
                }
            ]
        }

## All Bike Sharing Stations [/imp-endpoint/api/V2/Resources/BikeSharing/All]    
This collection contains a list of all bike sharing stations.

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The data structure of the response contains the following attributes: 

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the defined business area
--- | --- | ---
actions | Array | Available actions
id | Number | Internal bike sharing station identification number
description | String | Textual description of location
type | String | Type of bike sharing station
uri | URI | URI to request more details.
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
availability | Double | Availability in percentage
operator | String | Resource operator
phoneNo | String | 
operatorURI | String |
operatorName | String | Resource operator
address | Object | 
numberOfBikes | Number | Number of bikes or storing positions
numberOfFreeBikes | Number | Number of currently available bikes
services | Array | 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request.  

Parts of the data structure might be omitted if the information is not available. 
    

### Getting bikes [GET]
@testable

+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)

        {
          "metaData": [
            {
              "serviceAlias": "callabike",
              "lastUpdateTime": "2014-08-11T13:38:33+02:00",
              "messages": [
                
              ]
            },
            {
              "serviceAlias": "nextbike",
              "lastUpdateTime": "2014-08-11T13:38:36+02:00",
              "messages": [
                
              ]
            }
          ],
          "resources": [
            {
              "actions": [
                {
                  "name": "book",
                  "method": "POST",
                  "uri": "Resources/BikeSharing/BikeSharingStation/47059/Process?action=book"
                }
              ],
              "id": 47059,
              "description": "Ernst-Reuter-Platz / Marchstraße",
              "type": "BikeSharingStation",
              "uri": "Resources/BikeSharing/BikeSharingStation/47059",
              "location": {
                    "type": "Point",
                    "coordinates": [
                        13.32278823852539,
                        52.51343536376953
                    ]
              },
              "provider": "callabike",
              "availability": 62.5,
              "operator": "CallABike"
            },
            {
              "actions": [
                {
                  "name": "book",
                  "method": "POST",
                  "uri": "Resources/BikeSharing/BikeSharingStation/47072/Process?action=book"
                }
              ],
              "id": 47072,
              "description": "Wilmersdorfer Straße / Goethestraße",
              "type": "BikeSharingStation",
              "uri": "Resources/BikeSharing/BikeSharingStation/47072",
              "location": {
                    "type": "Point",
                    "coordinates": [
                        13.306029319763184,
                        52.5088996887207
                    ]
              },
              "provider": "callabike",
              "availability": 68.75,
              "operator": "CallABike"
            }
          ]
        }
        

# Group Car Sharing
This is a group of all car sharing related rest resources.


## List of Car Sharing Locations with Basic Info [/imp-endpoint/api/V2/Resources/CarSharing/All?lat={lat}&lng={lng}&radius={radius}&f_cars={f_carsJson}] 

This collection contains a list of available car sharing locations in an area of interest specified by the query parameters (both free-floating cars and/or car sharing stations) 
with basic information and an URI to acquire more details.
In case of station-based cars, only the URI of the Car Sharing station is returned; in case of free-floating cars, the URI to the car itself is returned.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The optional filter `f_cars` can be used to get only car sharing stations providing cars with a specific `fuelType`, `provider` and `operator`.

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time. Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the area of interest
--- | --- | ---
actions | Array | 
id | Number | 
description | String | License ID or approximate location
type | String | Type of resource
uri | URI | URI
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
availability | Double | Availability in percentage
operator | String | Resource operator
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request


### Getting car sharing locations [GET]
@testable

+ Parameters
    + lat (optional, number, `52.52`) ... latitude value. Has example value.
    + lng (optional, number, `13.39`) ... longitude value. Has example value.
    + radius (optional, number, `5000`) ... radius in meter. Has example value.
    + f_carsJson (optional, string, `{"fuelType":"ELECTRICITY", "operator":"FlinksterDB"}`) ... String `f_carsJson` may contain fuel type and operator filter as json data. Example values `{"fuelType":"ELECTRICITY"}`, `{"fuelType":"PETROL"}` or `{"operator":FlinksterDB"}`.

+ Request

    + Headers
        
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 

+ Response 200 (application/json)
    
    + Body
    
            {
              "metaData": [
                {
                  "serviceAlias": "flinkster",
                  "lastUpdateTime": "2014-11-22T03:14:44+0100",
                  "messages": []
                },
                {
                  "serviceAlias": "car2Go",
                  "lastUpdateTime": "2014-11-22T03:20:51+0100",
                  "messages": []
                },
                {
                  "serviceAlias": "driveNow",
                  "lastUpdateTime": "2014-11-22T03:20:16+0100",
                  "messages": []
                },
                {
                  "serviceAlias": "citeeCar",
                  "lastUpdateTime": "2014-11-22T03:19:51+0100",
                  "messages": []
                },
                {
                  "serviceAlias": "multiCity",
                  "lastUpdateTime": "2014-11-22T03:20:34+0100",
                  "messages": []
                }
              ],
              "resources": [
                {
                  "actions": [],
                  "id": 49483,
                  "description": "B-CC 1426",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/49483",
                  "location": {
                    "type": "Point",
                    "coordinates": [
                        13.390524864196777,
                        52.525909423828125
                    ]
                  },
                  "provider": "citeeCar",
                  "availability": null,
                  "operator": "CiteeCar",
                  "modFlag": "Relocated"
                },
                {
                  "actions": [],
                  "id": 48831,
                  "description": "B-CC 6109",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/48831",
                  "location": {
                    "type": "Point",
                    "coordinates": [
                        13.393811225891113,
                        52.51978302001953
                    ]
                  },
                  "provider": "citeeCar",
                  "availability": null,
                  "operator": "CiteeCar",
                  "modFlag": "Relocated"
                }
              ]
            } 

## List of All Car Sharing Locations with Basic Info [/imp-endpoint/api/V2/Resources/CarSharing/All] 

This collection contains a list of all available car sharing locations (both free-floating cars and/or car sharing stations) 
with basic information and an URI to acquire more details.
In case of station-based cars, only the URI of the Car Sharing station is returned; in case of free-floating cars, the URI to the car itself is returned.

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time. Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within defined business area
--- | --- | ---
actions | Array | 
id | Number | 
description | String | License ID or approximate location
type | String | Type of resource
uri | URI | URI
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
availability | Double | Availability in percentage
operator | String | Resource operator
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request


### Getting all car sharing locations [GET]
@testable

+ Request

    + Headers
        
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 

+ Response 200 (application/json)
    
    + Body
    
            {
              "metaData": [
                {
                  "serviceAlias": "flinkster",
                  "lastUpdateTime": "2014-07-25T11:30:33+05:30",
                  "messages": [
                    
                  ]
                },
                {
                  "serviceAlias": "car2Go",
                  "lastUpdateTime": "2014-07-25T11:30:28+05:30",
                  "messages": [
                    
                  ]
                },
                {
                  "serviceAlias": "driveNow",
                  "lastUpdateTime": "2014-07-25T11:30:30+05:30",
                  "messages": [
                    
                  ]
                },
                {
                  "serviceAlias": "citeeCar",
                  "lastUpdateTime": "2014-07-25T11:30:34+05:30",
                  "messages": [
                    
                  ]
                },
                {
                  "serviceAlias": "multiCity",
                  "lastUpdateTime": "2014-07-25T11:30:36+05:30",
                  "messages": [
                    
                  ]
                }
              ],
              "resources": [
                {
                  "actions": [
                    {
                      "name": "book",
                      "method": "POST",
                      "uri": "Resources/CarSharing/Stations/7695/Process?action=book"
                    }
                  ],
                  "id": 7695,
                  "description": "U-Bahnhof Senefelder Platz",
                  "type": "Stations",
                  "uri": "Resources/CarSharing/Stations/7695",
                  "location": {
                    "type": "Point",
                    "coordinates": [
                        13.412632271647453,
                        52.53166159018624
                    ]
                  },
                  "provider": "flinkster",
                  "availability": 0,
                  "operator": "FlinksterDB"
                },
                {
                  "actions": [
                    {
                      "name": "book",
                      "method": "POST",
                      "uri": "Resources/CarSharing/Stations/7683/Process?action=book"
                    }
                  ],
                  "id": 7683,
                  "description": "U-Bahnhof Hermannplatz",
                  "type": "Stations",
                  "uri": "Resources/CarSharing/Stations/7683",
                  "location": {
                    "type": "Point",
                    "coordinates": [
                        13.422980234026909,
                        52.48663380523992
                    ]
                  },
                  "provider": "flinkster",
                  "availability": 0,
                  "operator": "FlinksterDB"
                }
              ]
            }

## List of free-floating Cars with Basic Info [/imp-endpoint/api/V2/Resources/CarSharing/Cars?lat={lat}&lng={lng}&radius={radius}&f_cars={fuelTypeJson}]

This collection contains a list of available free-floating cars in a specific area specified by query parameters.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The optional filter `f_cars` can be used to get cars with a specific `fuelType`

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time. Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources
--- | --- | ---
actions | Array | 
id | Number | car id
description | String | License ID or approximate location
type | String | "CarSharingCarDetails"
uri | URI | URI
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
availability | Double | Availability in percentage
operator | String | Resource operator
model | String | Car model
address | String | Street, city, etc.
licenseId | String | License ID
category | String | ENUM{"Fullsize", "Compact", "Smallsize", ... }
fuelType | String | electric vehicle ("ELECTRICITY") or petrol car ("PETROL")
fuelLevel | Double | Fuel level in percentage
imageLink | Link | link to the car image
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request.


### Getting free-floating Cars [GET] 
@testable

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `3000`) ... radius in meter. Has example value.
    + fuelTypeJson (optional, string, `{"fuelType":"ELECTRICITY"}`) ... String `fuelTypeJson` fuel type json data. Example value `{"fuelType":"ELECTRICITY"}` or `{"fuelType":"PETROL"}`

+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT     
        
        
+ Response 200 (application/json)

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "flinkster",
                        "lastUpdateTime": "2014-12-16T10:25:02+01:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "car2Go",
                        "lastUpdateTime": "2014-12-16T10:24:59+01:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "citeeCar",
                        "lastUpdateTime": "2014-12-16T10:25:03+01:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "multiCity",
                        "lastUpdateTime": "2014-12-16T10:25:04+01:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "driveNow",
                        "lastUpdateTime": "2014-12-16T10:24:57+01:00",
                        "messages": []
                    }
                ],
                "resources": [
                    {
                        "actions": [],
                        "id": 50781,
                        "description": "B-MC 2463",
                        "type": "CarSharingCar",
                        "uri": "Resources/CarSharing/Cars/50781",
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                13.3706283,
                                52.526275
                            ]
                        },
                        "provider": "multiCity",
                        "availability": 100,
                        "operator": "Multicity",
                        "model": "Citroën C-Zero ",
                        "address": null,
                        "licenseId": "B-MC 2463",
                        "category": null,
                        "fuelType": "ELECTRICITY",
                        "fuelLevel": null,
                        "imageLink": "www.flinkster.de/common/gethashdata.php?uniquebid=dbc653cac35df2a7f854457e6c2d6339"
                    },
                    {
                        "actions": [],
                        "id": 50324,
                        "description": "B-MC 2594",
                        "type": "CarSharingCar",
                        "uri": "Resources/CarSharing/Cars/50324",
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                13.39542,
                                52.5327567
                            ]
                        },
                        "provider": "multiCity",
                        "availability": 100,
                        "operator": "Multicity",
                        "model": "Citroën C-Zero ",
                        "address": null,
                        "licenseId": "B-MC 2594",
                        "category": null,
                        "fuelType": "ELECTRICITY",
                        "fuelLevel": null,
                        "imageLink": "www.flinkster.de/common/gethashdata.php?uniquebid=eb6c05d7352c1ee9bf38ce2e6a1eada4"
                    }
                ]
            }
        

## List of Stations with Basic Info [/imp-endpoint/api/V2/Resources/CarSharing/Stations?lat={lat}&lng={lng}&radius={radius}&f_cars={f_carsJson}]

This collection contains a list of car sharing stations in an area of interest specified by the query parameters,
together with basic information and an URI to acquire more details.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The optional filter `f_cars` can be used to get only car sharing stations providing cars with a specific `fuelType`, `provider` and `operator`.

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time. Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | 
id | Number | Internal car sharing station identification number
description | String | Approximate location
type | String | 
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
availability | Double | Availability in percentage
operator | String | Resource operator
operatorURI | String | 
operatorName | String | Resource operator
address | Object | {"cityCode": String, "city": String, "street": String, "houseNo": String, "district": String, "region": String, "country": String}
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request. 


### Getting car sharing station list [GET] 
@testable

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `10000`) ... radius in meter. Has example value.
    + f_carsJson (optional, string, `{"fuelType":"ELECTRICITY", "operator":"FlinksterDB"}`) ... String `f_carsJson` may contain fuel type and operator filter as json data. Example values `{"fuelType":"ELECTRICITY"}`, `{"fuelType":"PETROL"}` or `{"operator":"FlinksterDB"}`.
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)
            
    + Body
    
            {
                "metaData": [
                {
                  "serviceAlias": "flinkster",
                  "lastUpdateTime": "2014-12-12T14:24:04+01:00",
                  "messages": []
                },
                {
                  "serviceAlias": "car2Go",
                  "lastUpdateTime": "2014-12-12T14:23:58+01:00",
                  "messages": []
                },
                {
                  "serviceAlias": "driveNow",
                  "lastUpdateTime": "2014-12-12T14:23:51+01:00",
                  "messages": []
                },
                {
                  "serviceAlias": "citeeCar",
                  "lastUpdateTime": "2014-12-12T14:24:14+01:00",
                  "messages": []
                },
                {
                  "serviceAlias": "multiCity",
                  "lastUpdateTime": "2014-12-12T14:24:11+01:00",
                  "messages": []
                }
              ],
              "resources": [
                {
                  "actions": [
                    {
                      "name": "book",
                      "method": "POST",
                      "uri": "Resources/CarSharing/Stations/46874/Process?action=book"
                    }
                  ],
                  "id": 46874,
                  "description": "Caroline-Michaelis-Straße",
                  "type": "CarSharingStation",
                  "uri": "Resources/CarSharing/Stations/46874",
                  "location": {
                    "type": "Point",
                    "coordinates": [
                        13.382519781589508,
                        52.533559809882156
                    ]
                  },
                  "provider": "flinkster",
                  "availability": 100,
                  "operator": "FlinksterDB",
                  "modFlag": "Modified",
                  "phoneNo": null,
                  "operatorURI": null,
                  "operatorName": "FlinksterDB",
                  "address": {
                    "citycode": "10115",
                    "city": "Berlin",
                    "street": "Caroline-Michaelis-Straße",
                    "houseno": "5-11",
                    "district": "Mitte",
                    "region": null,
                    "country": null
                  }
                }
              ]
            }  

# Group EV Charging
This is a group of all EV Charging related rest resources.
    

## List of EV Charging Stations with Basic Info [/imp-endpoint/api/V2/Resources/EVCharging/Stations?lat={lat}&lng={lng}&radius={radius}]
This collection contains a list of all electric vehicle (EV) charging stations in an area of interest specified by query parameters, 
together with geo location, name, and a URI to acquire more details.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource
id | Number | Internal charging station identification number
description | String | Approximate location or EV charging operator
type | String | ="EVChargingStation" 
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider |  String| Service provider
availability | Double | Availability in percentage
operator | String | Resource operator
address | Object | 
plugTypes | Enum value | Types of plugs
power | Object | Unit and value 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request  


### Getting EV charging stations [GET]
@testable

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `1000`) ... radius in meter. Has example value.
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)
    
        {
            "metaData": [
                {
                    "serviceAlias": "vattenfall",
                    "lastUpdateTime": "2014-07-10T12:06:09+02:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [],
                    "id": 268355,
                    "description": "Conti",
                    "type": "EVChargingStation",
                    "uri": "Resources/EVCharging/Stations/268355",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.38639,
                            52.51474
                        ]
                    },
                    "provider": "vattenfall",
                    "availability": 0,
                    "operator": "Vattenfall",
                    "modFlag": "Relocated",
                    "address": {
                        "citycode": "10117",
                        "city": "Berlin",
                        "street": "Glinkastr.",
                        "houseno": "38",
                        "district": null,
                        "region": null,
                        "country": null
                    },
                    "plugTypes": [
                        "Type2Outlet",
                        "TypeFSchuko"
                    ],
                    "power": {
                        "unit": "KiloWatt",
                        "value": 11040
                    }
                }
            ]
        }

## List of All EV Charging Stations with Basic Info [/imp-endpoint/api/V2/Resources/EVCharging/Stations/All]
This collection contains a list of all electric vehicle (EV) charging stations.

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource
id | Number | Internal charging station identification number
description | String | Approximate location or EV charging operator
type | String | ="EVChargingStation" 
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider |  String| Service provider
availability | Double | Availability in percentage
operator | String | Resource operator
address | Object | 
plugTypes | Enum value | Types of plugs
power | Object | Unit and value
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request  


### Getting EV charging stations [GET]
@testable

+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)
    
        {
            "metaData": [
                {
                    "serviceAlias": "vattenfall",
                    "lastUpdateTime": "2014-08-11T14:54:39+02:00",
                    "messages": []
                },
                {
                    "serviceAlias": "hubject",
                    "lastUpdateTime": "2014-08-11T05:17:50+02:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [],
                    "id": 53009,
                    "description": "",
                    "type": "EVChargingStationDetails",
                    "uri": "Resources/EVCharging/Stations/EVChargingStationDetails/53009",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.43448,
                            52.43498
                        ]
                    },
                    "provider": "vattenfall",
                    "availability": 100,
                    "operator": "Vattenfall"
                },
                {
                    "actions": [],
                    "id": 49313,
                    "description": "TOTAL-Tankstelle",
                    "type": "EVChargingStationDetails",
                    "uri": "Resources/EVCharging/Stations/EVChargingStationDetails/49313",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.4675685,
                            52.5481579
                        ]
                    },
                    "provider": "vattenfall",
                    "availability": 100,
                    "operator": "Vattenfall"
                }
            ]
        }

# Group Parking
This is a group of all parking related REST resources including Parking Garages and On-street Parking Vacancies.
    

## Parking Garages with Basic Info [/imp-endpoint/api/V2/Resources/Parking/Garages?lat={lat}&lng={lng}&radius={radius}&f_garages={categoryJson}&filter={filter}]
This collection contains a list of all parking garages in an area of interest specified by query parameters together with an URI to acquire more details. Parking garages can be filtered by category.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})


The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource (book, cancel, etc.)
id | Number | Internal parking garage identification number
description | String | Approximate location
type | String | (="ParkingGarage")
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider (usually equals operator)
availability | Double | Availability in percentage
operator | String | Parking space operator (usually equals provider)
totalnumber | Object | Number of lots for different categories { "handicappedOnly":Int, "womenOnly":Int, "others":Int }
lottype | Enum | Type of garage {"Parking garage", "Parking zone", "Underground car park", "Parking lot"} 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request. 

Parts of the data structure might be omitted if the information is not available. 
    

### Getting parking garages [GET]
@testable

+ Parameters
    + lat (optional, number, `52.52`) ... latitude value. Has example value.
    + lng (optional, number, `13.39`) ... longitude value. Has example value.
    + radius (optional, number, `10000`) ... radius in meter. Has example value.
    + categoryJson (optional, string, `{"category":["P+R"]}`) ... String `categoryJson` category json data, containing a list of possible category values combined by OR. Example value `{"category":["P%2BR"]}` or `{"category":["P"]}`, P%2BR stands for P+R
    + filter (optional, string, `Berlin`) ... free text filter value. Multiple strings are combined by or. Examples `Berlin`, `{Berlin}`, `{Berlin Mitte}`
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)   

        {
            "metaData": [
                {
                    "serviceAlias": "vmzParking",
                    "lastUpdateTime": "2014-12-16T10:14:46+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "city2eParking",
                    "lastUpdateTime": "2014-12-16T10:35:46+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "parkUParking",
                    "lastUpdateTime": "2014-12-16T10:35:46+01:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/50368/Process?action=consume"
                        }
                    ],
                    "id": 50368,
                    "description": "P+R Alt-Mariendorf (U)",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/50368",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.3900337219238,
                            52.439266204834
                        ]
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "PR",
                    "totalnumber": {
                        "others": 125,
                        "handicappedOnly": null,
                        "womenOnly": null
                    },
                    "lottype": null
                },
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/50050/Process?action=consume"
                        }
                    ],
                    "id": 50050,
                    "description": "P+R Tempelhof (S + U)",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/50050",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.3851003646851,
                            52.4693984985352
                        ]
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "PR",
                    "totalnumber": {
                        "others": 70,
                        "handicappedOnly": null,
                        "womenOnly": null
                    },
                    "lottype": null
                },
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/50399/Process?action=consume"
                        }
                    ],
                    "id": 50399,
                    "description": "P+R Heidelberger Platz (S + U)",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/50399",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.3121109008789,
                            52.4807777404785
                        ]
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "PR",
                    "totalnumber": {
                        "others": 140,
                        "handicappedOnly": null,
                        "womenOnly": null
                    },
                    "lottype": null
                }
            ]
        }


## OnStreet Parking Spaces [/imp-endpoint/api/V2/Resources/Parking/OnStreetSpaces?lat={lat}&lng={lng}&radius={radius}&f_onStreetSpaces={sizeJson}&filter={filter}]
This collection contains a list of OnStreet parking spaces for specified size in an area of interest specified by query parameters together with an URI to acquire more details. OnStreet parking spaces can be filtered by the space size (Small, Medium or Large).
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource (currently no actions available)
id | Number | Internal OnStreet parking space identification number
description | String | Approximate location
type | String | (="ParkingOnStreetSpace")
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Parking service provider (usually equals operator)
availability | Double | Availability in percentage
operator | String | Parking space operator (usually equals provider)
size | Enum | Size of OnStreet parking space {"Large", "Medium", "Small", "Unknown"} 
accessibility | Enum | Accessibility of OnStreet parking space {"Private","Public","SemiPublic","Unknown"}
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request. 

Parts of the data structure might be omitted if the information is not available. 


### Getting OnStreet parking [GET]
@testable

+ Parameters
    + lat (optional, number, `48.13`) ... latitude value. Has example value.
    + lng (optional, number, `11.59`) ... longitude value. Has example value.
    + radius (optional, number, `5000`) ... radius in meter. Has example value.
    + sizeJson (optional, string, `{"size":"Medium"}`) ... String `sizeJson` size json data. Example value `{"size":"Large"}` or `{"size":"Medium"}`
    + filter (optional, string, `Medium`) ... free text filter value. Multiple strings are combined by or. Examples `Berlin`, `{Berlin}`, `{Berlin Mitte}`
    
+ Request

    + Headers

            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 

+ Response 200 (application/json)   

        {
            "metaData": [
                {
                    "serviceAlias": "vmzParking",
                    "lastUpdateTime": "2014-12-02T15:59:01+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "city2eParking",
                    "lastUpdateTime": "2014-12-02T16:27:45+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "parkUParking",
                    "lastUpdateTime": "2014-12-02T16:27:50+01:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [],
                    "id": 239,
                    "description": "Einemstraße",
                    "type": "ParkingOnStreetSpace",
                    "uri": "Resources/Parking/OnStreetSpaces/239",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.352953,
                            52.502795
                        ]
                    },
                    "provider": "parkUParking",
                    "availability": 100,
                    "operator": "ParkU",
                    "size": "Large",
                    "accessibility": null
                }
            ]
        }

## All Parking Garages or OnStreet parking spaces or both [/imp-endpoint/api/V2/Resources/Parking/All?f_onStreetSpaces={sizeJson}&f_garages={categoryJson}&filter={filter}]    
This collection contains a list of all parking garages or OnStreet parking spaces or both in an area of interest. The parking possibilities can be filtered by garage category (viz. P+R or P) or space size (Small, Medium or Large).

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The response contains attributes from parking garages or OnStreet parking spaces or both.

Parts of the data structure might be omitted if the information is not available. 
    

### Getting all parking garages or OnStreet parking spaces or both with specified size and category [GET]
@testable

+ Parameters
    + sizeJson (optional, string, `{"size":"Large"}`) ... String `sizeJson` size json data. Example value `{"size":"Large"}` or `{"size":"Medium"}`or `{"size":"Small"}
    + categoryJson (optional, string, `{"category":["P+R"]}`) ... String `categoryJson` category json data. Example value `{"category" : ["P%2BR"]}` or `{"category": ["P"]}`
    + filter (optional, string, `Large PR`) ... free text filter value. Multiple strings are combined by or. Examples `Berlin`, `{Berlin}`, `{Berlin Mitte}`
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)   

        {
            "metaData": [
                {
                    "serviceAlias": "vmzParking",
                    "lastUpdateTime": "2014-11-20T12:55:14+01:00",
                    "messages": []
                                    },
                {
                    "serviceAlias": "city2eParking",
                    "lastUpdateTime": "2014-11-20T13:22:50+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "parkUParking",
                    "lastUpdateTime": "2014-11-20T13:22:54+01:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [],
                    "id": 2838,
                    "description": "Lohmeyerstraße",
                    "type": "OnStreetSpaces",
                    "uri": "Resources/Parking/OnStreetSpaces/2838",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.301087,
                            52.517519
                        ]
                    },
                    "provider": "parkUParking",
                    "availability": 100,
                    "operator": "ParkU"
                },
                {
                    "actions": [],
                    "id": 239,
                    "description": "Einemstraße",
                    "type": "OnStreetSpaces",
                    "uri": "Resources/Parking/OnStreetSpaces/239",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.352953,
                            52.502795
                        ]
                    },
                    "provider": "parkUParking",
                    "availability": 100,
                    "operator": "ParkU"
                }
            ]
        }

# Group Public Transport
This is a group of all public transportation related REST resources.


## List of Public Transport Stations with Basic Info [/imp-endpoint/api/V2/Resources/PublicTransport/Stations?lat={lat}&lng={lng}&radius={radius}&f_stations={f_stations}&filter={filter}] 

This collection contains a list of stations (U-Bahn/S-Bahn/train/bus/tram) in a specified area with basic information and a URI to get more details.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The optional filter `f_stations` can be used to get the stations with a particular `stationType`.

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time. Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
description | String | Approximate location
type | String | (="PublicTransportStation")
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
availability | Double | Availability in percentage
operator | String | Bus/tram (="VBBStation"), metro (="VBBStationU"), S-Bahn (="VBBStationS")
stationType | String | BusTramStation, MetroStation, CityTrainStation
platforms | String | Platforms of the station
wheelChair | Boolean | Wheel chair accessibility
lines | Array of Objects | Array of lines departing at the station
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request.


+ Parameters
    + lat (number, `48.13`) ... latitude value. Has example value.
    + lng (number, `11.59`) ... longitude value. Has example value.
    + radius (number, `500`) ... radius in meter. Has example value.
    + f_stations (optional, string, `{"stationType":"BusTramStation"}`) ... String `f_stations` filter value. Has example value.
    + filter (optional, string, `BusTramStation`) ... free text filter value. Multiple strings are combined by or. Examples `Berlin`, `{Berlin}`, `{Berlin Mitte}`
+ Model (application/json)

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "vmzStation",
                        "lastUpdateTime": "2015-01-07T07:14:23+00:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "osmBerlinStation",
                        "lastUpdateTime": "2015-01-07T07:10:41+00:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "osmMunichStation",
                        "lastUpdateTime": "2015-01-07T07:12:46+00:00",
                        "messages": []
                    }
                ],
                "resources": [
                    {
                        "actions": [],
                        "id": 10573,
                        "description": "Peter-Auzinger-StraÃ?e",
                        "type": "PublicTransportStation",
                        "uri": null,
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                11.58288,
                                48.098793
                            ]
                        },
                        "provider": "osmMunichStation",
                        "availability": 100,
                        "operator": null,
                        "stationType": "BusTramStation",
                        "platforms": null,
                        "wheelChair": null,
                        "lines": [
                            {
                                "name": "139",
                                "trafficType": "Bus"
                            },
                            {
                                "name": "220",
                                "trafficType": "Bus"
                            }
                        ]
                    },
                    {
                        "actions": [],
                        "id": 10634,
                        "description": "LincolnstraÃ?e",
                        "type": "PublicTransportStation",
                        "uri": null,
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                11.5904131,
                                48.094374
                            ]
                        },
                        "provider": "osmMunichStation",
                        "availability": 100,
                        "operator": null,
                        "stationType": "BusTramStation",
                        "platforms": null,
                        "wheelChair": null,
                        "lines": [
                            {
                                "name": "220",
                                "trafficType": "Bus"
                            },
                            {
                                "name": "220",
                                "trafficType": "Bus"
                            }
                        ]
                    }
                ]    
            }



### Getting all stations in a specific area [GET]
@testable

+ Request

    + Headers
        
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT

+ Response 200

    [List of Public Transport Stations with Basic Info][]
    
    

## List of All Public Transport Stations with Basic Info [/imp-endpoint/api/V2/Resources/PublicTransport/Stations/All] 

This collection contains a list of stations (U-Bahn/S-Bahn/train/bus/tram).

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time. Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the business area
--- | --- | ---
description | String | Approximate location
type | String | (="PublicTransportStation")
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
availability | Double | Availability in percentage
operator | String | Bus/tram (="VBBStation"), metro (="VBBStationU"), S-Bahn (="VBBStationS")
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request. 

+ Model (application/json)

    + Body
    
            {
                "metaData": [
                    {
                      "serviceAlias": "vmzStation",
                      "lastUpdateTime": "2015-01-07T07:14:23+00:00",
                      "messages": [ ]
                    }
                ],
                "resources": [
                    {
                      "actions": [
                        
                      ],
                      "id": 4498,
                      "description": "HÃ¶now, Erikastr.",
                      "type": "PublicTransportStation",
                      "uri": "Resources/PublicTransport/Stations/PublicTransportStation/4498",
                      "location": {
                        "type": "Point",
                        "coordinates": [
                          13.627082,
                          52.530892
                        ]
                      },
                      "provider": "vmzStation",
                      "availability": 100.0,
                      "operator": "VBBStation",
                      "modFlag": "Modified"  
                    },
                    {
                      "actions": [
                        
                      ],
                      "id": 1306,
                      "description": "S+U Karl-Bonhoeffer-Nervenklinik (Berlin)",
                      "type": "PublicTransportStation",
                      "uri": "Resources/PublicTransport/Stations/PublicTransportStation/1306",
                      "location": {
                        "type": "Point",
                        "coordinates": [
                          13.332921,
                          52.578169
                        ]
                      },
                      "provider": "vmzStation",
                      "availability": 100.0,
                      "operator": "VBBStation",
                      "modFlag": "Modified"
                    }
                ]    
            }



### Getting all stations [GET]
@testable

+ Request

    + Headers
        
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT

+ Response 200

    [List of All Public Transport Stations with Basic Info][]
    

# Group Taxi Service
This is a group of all taxi related REST resources.


## List of available Taxis with Basic Info [/imp-endpoint/api/V2/Resources/TaxiService/Taxis?lat={lat}&lng={lng}&radius={radius}] 

This collection contains a list of taxis in a specified area with basic information and a URI to get more details.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time. Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.


### Get taxis in a specified area [GET]
@testable

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
id | Number | Internal taxi identification number
description | String | Approximate location
type | String | Type of taxi
model | String | Model of taxi, e.g. MB W212
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
remainingTime | Object | Required time the taxi would need to reach the center of the requested region. The way the time is calculated may depend on the service provider. { "value": Number, "unit": String }
provider | String | Service provider 
availability | Double | Availability in percentage
operator | String | Resource operator 
size | Enum | Size of car 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request. 

Parts of the data structure might be omitted if the information is not available. 

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `1000`) ... radius in meter. Has example value.
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 

+ Response 200 (application/json)

        {
            "metaData": [
                {
                  "serviceAlias": "bettertaxi",
                  "lastUpdateTime": null,
                  "messages": []
                }
            ],
              "resources": []
        }

## List of All available Taxis and Taxi Ranks with Basic Info [/imp-endpoint/api/V2/Resources/TaxiService/All] 

This collection contains a list of taxis and taxi ranks.

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time. Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.


### Get list of taxis and taxi ranks [GET]
@testable

+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 

+ Response 200 (application/json)

        {
            "metaData": [
                {
                  "serviceAlias": "bettertaxi",
                  "lastUpdateTime": null,
                  "messages": []
                },
                {
                  "serviceAlias": "osmBerlinTaxi",
                  "lastUpdateTime": null,
                  "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [],
                    "id": 461,
                    "description": null,
                    "type": "TaxiServiceRank",
                    "uri": "Resources/TaxiService/Ranks/461",
                    "location": {
                        "coordinates": [
                            13.6996987,
                            52.5209164
                        ],
                        "type": "Point"
                    },
                    "provider": "osmBerlinTaxi",
                    "availability": null,
                    "operator": null
                }
            ]
        }
        
            
        

## List of available Taxi Ranks with Basic Info [/imp-endpoint/api/V2/Resources/TaxiService/Ranks?lat={lat}&lng={lng}&radius={radius}] 

This collection contains a list of taxi ranks in a specified area with basic information and a URI to get more details.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time. Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.


### Get taxi ranks in a specified area [GET]
@testable

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
id | Number | Internal taxi rank identification number
description | String | Approximate location
type | String | Type of taxi rank
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider 
availability | Double | Availability in percentage
operator | String | Resource operator 
size | Enum | Size of car 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request. 

Parts of the data structure might be omitted if the information is not available. 

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `1000`) ... radius in meter. Has example value.
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 

+ Response 200 (application/json)

        {
            "metaData": [
                {
                  "serviceAlias": "osmBerlinTaxi",
                  "lastUpdateTime": null,
                  "messages": []
                }
            ],
             "resources": [
                {
                     "actions": [],
                     "id": 461,
                     "description": null,
                     "type": "TaxiServiceRank",
                     "uri": "Resources/TaxiService/Ranks/461",
                     "location": {
                     "coordinates": [
                        13.6996987,
                        52.5209164
                    ],
                     "type": "Point"
                },
                 "provider": "osmBerlinTaxi",
                 "availability": null,
                 "operator": null
                }
            ]
        }
        

# Group Journey Planner. IMR
This is a group of all intermodal router (IMR) related REST resources.


## List of Trip Proposals with Basic Info. Intermodal Router [/imp-endpoint/api/V2/TripProposals/IMR] 

This collection contains a list of trip proposals with basic information for specified trip criteria. Note: The trip proposals can be multimodal or intermodal, depending on which routing service the mobility provider of the user is subscribed to.

The data structure of collection contains a list of trip proposals. Each trip proposal contains the following attributes:

attribute | json data type | comments
--- | --- | ---
url | URI | URI to request more details
origin | Object | Start point of the proposed trip
destination | Object | Endpoint of the proposed trip
trafficTypes | Array | List of traffic types used in the proposed trip. Possible values: Bike, Bus, Car, CityTrain, Ferry, Metro, Other, RegioTrain, Unknown, Train, Tram, Walk, UBahn. The trafficType Other is used in the segments for the start/stop procedures of car rental/parking.
description | String | Description of the trip proposal
costs | Array | List of costs for the proposed trip including distance, duration, price, CO2 emmision and ticket price for public transport.

    
+ Model (application/json)

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "vmzImrRouting",
                        "lastUpdateTime": "2014-12-23T12:35:43+00:00",
                        "messages": []
                    }
                ],
                "tripProposals": [
                    {
                        "url": "TripProposals/IMR/11873",
                        "origin": {
                            "location": {
                                "type": "Point",
                                "coordinates": [
                                    13.4113422,
                                    52.5218455
                                ]
                            },
                            "address": "Dircksenstraße, 10178 Berlin, Germany",
                            "time": "2013-07-23T13:10:00+00:00"
                        },
                        "destination": {
                            "location": {
                                "type": "Point",
                                "coordinates": [
                                    13.3194514,
                                    52.5635387
                                ]
                            },
                            "address": "Meteorstraße 40, 13405 Berlin, Germany",
                            "time": "2013-07-23T13:43:26+00:00"
                        },
                        "trafficTypes": [
                            "OwnBike"
                        ],
                        "description": null,
                        "costs": {
                            "distance": {
                                "unit": "meter",
                                "value": 8929
                            },
                            "duration": {
                                "unit": "minute",
                                "value": 33.43333333333333
                            },
                            "price": {
                                "unit": "Euro",
                                "value": 0
                            },
                            "emission": {
                                "unit": "gram",
                                "value": 0
                            },
                            "ticketPrice": null
                        }
                    },
                    {
                        "url": "TripProposals/IMR/11874",
                        "origin": {
                            "location": {
                                "type": "Point",
                                "coordinates": [
                                    13.4113422,
                                    52.5218455
                                ]
                            },
                            "address": "Dircksenstraße, 10178 Berlin, Germany",
                            "time": "2013-07-23T13:10:00+00:00"
                        },
                        "destination": {
                            "location": {
                                "type": "Point",
                                "coordinates": [
                                    13.3194514,
                                    52.5635387
                                ]
                            },
                            "address": "Meteorstraße 40, 13405 Berlin, Germany",
                            "time": "2013-07-23T15:17:54+00:00"
                        },
                        "trafficTypes": [
                            "Other",
                            "BikeSharing",
                            "Walk"
                        ],
                        "description": null,
                        "costs": {
                            "distance": {
                                "unit": "meter",
                                "value": 10264
                            },
                            "duration": {
                                "unit": "minute",
                                "value": 127.9
                            },
                            "price": {
                                "unit": "Euro",
                                "value": 0.024444444444444442
                            },
                            "emission": {
                                "unit": "gram",
                                "value": 0
                            },
                            "ticketPrice": null
                        }
                    }
                ]
            }



### Getting Trip Proposals by IMR Planner  [POST]
@testable

Selection criteria for trip proposals is specified in the request body as described in the sample request with the following attributes:

attribute | json data type | comments
--- | --- | ---
origin | Object | Start point specified by a geo location. Addresses can be converted into geo locations by means of "GET /Resources/GeoLocations".
destination | Object | End point specified by a geo location.
time | String | Date and time of the trip. If no time is specified, the current time is used as departure time.
departureTime | Boolean | Specifies whether the time is used as departure or arrival time
viapoints | Array of Objects | List of geolocations the route should pass in the given sequence
costFunctions | Array of Objects | List of cost factors, (such as Distance, Duration, Price, Emission), each with a percentaged weight. Sample cost function: {"costType":"Duration","percentage":"100"}. The resulting route alternatives will be ranked according to this cost function.
userId | String | Traveler id that requests a trip. Note: Currently it is not used by IMP and can be any string.
trafficTypes | Array | List of traffic types which will be considered when calculating best route alterntives. Due to the ranking according to the cost function not all modes may be used in the resulting route alternatives. Currently possible: Bike, BikeSharing, OwnBike, Bus, Car, CarSharing, OwnCar, CityTrain, Ferry, Metro, RegioTrain, Unknown, Train, Tram, Walk, UBahn. Bike and Car subsume BikeSharing and OwnBike or CarSharing and OwnCar respectively.
routingConstraints | Array of Objects | List of constraints to be taken into account for various traffic types, specified by min/max values. E.g. maximal distance in meters the traveler agrees to walk: {"routingConstraintType": "Distance", "trafficType": "Walk", "min": { "value": 0,"unit": "meter" }, "max":{"value":600, "unit":"meter"}}
ownVehicles | Array of Objects | List of own vehicles to be considered in calculation of route alternatives. Due to the ranking according to the cost function, own vehicles may not be used in the resulting route alternatives. Sample object value {"trafficType":"Car", "useParking":true,"useParkAndRide":false, "location":{"type": "Point", "coordinates": [13.064472900000055, 52.3905689]}}
maxRoutingResponses | Number | Number of to be provided route alternatives
numOfTravelers | Number | Number of fellow travelers
numOfLuggage | Number | Number of luggage pieces
useTrafficSituation | Boolean | If set to true, the current traffic situation will be considered in the route calculation

Usually a subscribed route planning service does not support all of the above parameters. In many cases that is indicated by warnings in the metaData section of the response.

Notes:
- IMR also provides routes in the past, but not for public transport
- The IMR takes into account information about current traffic situation (traffic jams/road works/...) for route calculation.
- Traveling time costs for proposed journeys include the following extra times: 2 minutes set-up time and 1 minute return time for free-floating car sharing and bike sharing; 2 minutes set-up time and 0 minutes return time for station-based car and bike sharing, 5 minutes parking time for free-floating car sharing and own car.




+ Request

    + Headers
    
            Content-Type: application/json
            Accept: application/json

    + Body
        
            {
              "origin": {
                "location": {"type": "Point", "coordinates": [ 13.41100700000004, 52.521642 ]}
              },
              "destination": {
                "location": {"type": "Point", "coordinates": [ 13.319420000000036, 52.56347100000001 ]}
              },
              "time": "2013-07-23T15:10:00+02:00",
              "departureTime":"true",
              "costFunctions": [
                {
                  "costType": "Price",
                  "percentage": 100
                }
              ],
              "userId": "4711/10",
              "trafficTypes": ["Walk","Bike","Car","Metro","CityTrain","Bus"],
              "routingConstraints": [],
              "ownVehicles": [
                {
                    "trafficType": "Car",
                    "location": {"type": "Point", "coordinates": [ 13.41100700000004, 52.521642 ]},
                    "useParking": "false",
                    "useParkAndRide": "true",
                    "cost":{"price":{"price":{"value": 2, "currency":"Euro"},"distance":{"value":1, "unit":"kilometer"}}, "emission":{"mass":{"value": 2, "unit":"gram"},"distance":{"value":1, "unit":"kilometer"}}}
                },
                {
                    "trafficType": "Bike",
                    "location": {"type": "Point", "coordinates": [ 13.41100700000004, 52.521642 ]}
                } 
              ],
              "maxRoutingResponses": 4,
              "numOfTravelers" : 2,
              "numOfLuggage" : 2,
              "useTrafficSituation" : true
            }

+ Response 200

    [List of Trip Proposals with Basic Info. Intermodal Router][]


# Group Journey Planner. Car Router
This is a group of all journey planner Car Router related REST resources.
            

## List of Trip Proposals with Basic Info. Car Journey Planner [/imp-endpoint/api/V2/TripProposals/CarRouter] 

This collection contains trip proposals with basic information for specified trip criteria.
The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
url | URI | URI to request more details
origin | Object | Start point of the proposed trip
destination | Object | Endpoint of the proposed trip
trafficTypes | Array | List of traffic types used in the proposed trip. Currently: Bike, Bus, Car, CityTrain, Ferry, Metro, Other, RegioTrain, Unknown, Train, Tram, Walk, UBahn. trafficType Other is used in the segments for car rental/parking  
description | String | 
costs | Array | List of costs for the proposed trip
    
+ Model (application/json)

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "vmzCarRouting",
                        "lastUpdateTime": "2014-12-23T12:35:43+00:00",
                        "messages": []
                    }
                ],
                "tripProposals": [
                    {
                        "url": "TripProposals/CarRouter/80844",
                        "origin": {
                            "location": {
                                "type": "Point",
                                "coordinates": [
                                    13.07367992401123,
                                    52.39419937133789
                                ]
                            },
                            "address": null,
                            "time": "2014-03-27T13:04:40+01:00"
                        },
                        "destination": {
                            "location": {
                                "type": "Point",
                                "coordinates": [
                                    13.319065,
                                    52.563589
                                ]
                            },
                            "address": null,
                            "time": "2014-03-27T14:48:09+01:00"
                        },
                        "trafficTypes": [
                            "OwnCar"
                        ],
                        "description": null,
                        "costs": {
                            "distance": null,
                            "duration": {
                                "unit": "second",
                                "value": 5947.563361271776
                            },
                            "price": null,
                            "emission": null,
                            "ticketPrice": null
                        }
                    }
                ]
            }



### Getting Trip Proposals by Car Journey Planner [POST]
@testable

Selection criteria is specified in the request body as described in the sample request:

origin: Start point specified by a geo location (addresses can be converted into geo locations by means of "GET /Resources/GeoLocations")

destination: Start point specified by a geo location. Either orgin or destination might specify a time.

time: Date and time of the trip. If no time is specified, the current time is used as departure time.

departureTime: Specifies whether the given time is used as departure or arrival time.

viaPoints: List of geo locations that the route should pass in the given sequence

costFunctions: List of cost factors (such as Distance, Duration, Price, Emission), each with a percentual weight 

routingConstraints: List of constraints to be taken into account for various traffic types, specified by min/max values

userId: User that requests a trip

+ Request

    + Headers
    
            Content-Type: application/json
            Accept: application/json

    + Body
        
            {
                "origin": {
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.072690999999963,
                            52.3941887
                        ]
                    }
                },
                "destination": {
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.319420000000036,
                            52.56347100000001
                        ]
                    }
                },
                "time": "2014-03-27T12:04:02+02:00",
                "departureTime":"true",
                "viaPoints": [],
                "costFunctions": [],
                "userId": "4711/10",
                "routingConstraints": []
            }

+ Response 200 

    [List of Trip Proposals with Basic Info. Car Journey Planner][]          

# Group Incidents / Traffic Info
This is a group of all incidents related REST resources.


## List of Incidents [/imp-endpoint/api/V2/Info/Incidents?lat={lat}&lng={lng}&radius={radius}] 

This collection contains a list of recent general incidents (incidents that affect public AND individual transport) in a specified area of interest with an URI to get more details.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
category | Enum | {"Roadworks", "Blockade", "Indefinition"} are the categories for the incidents with type "IncidentIndividualTransport", {"ConstructionProject", "Imbalance", "Diversion", "RailReplacement", "ShuttleService"} are the categories for incidents with type "IncidentPublicTransport"
message | String | 
timePeriod | Object | Time period of the incident
reason | String | Full description of reason
reasonShort | String | Short description of reason
consequence | String | Full description of consequence
consequenceShort | String | Short description of consequence
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
source | String | {= "PT", "INKO", etc.}
affectedTrips | Array | List of affected trips
net | NetType  | 
description | String | Description of an incident information
type | String | There are 2 types of incidents: Incidents with the type "IncidentIndividualTransport" affect individual transport (car, bicycle), incidents with the type "IncidentPublicTransport" affect public transport (bus, tram, etc.).
uri | URI | URI
provider | String | Service provider
operator | Enum | {"News", etc.}
externalResourceId | String | ID in external provider system

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `2000`) ... radius in meter. Has example value.
    
+ Model (application/json)

    + Body
    
            [
                {
                    "category": "Blockade",
                    "message": "Closed Road",
                    "timePeriod": {
                        "from": "2012-11-09T12:00:00+01:00",
                        "to": "2014-08-31T17:00:59+02:00"
                    },
                    "reason": null,
                    "reasonShort": null,
                    "consequence": null,
                    "consequenceShort": null,
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.319420000000036,
                            52.51774
                        ]
                    },
                    "source": "INKO",
                    "affectedTrips": null,
                    "net": [],
                    "description": "Roadworks carriageway reduced from 2 to 1 lane traffic, congestion has to be expected road closed direction closed",
                    "type": "IndividualTransport",
                    "uri": null,
                    "provider": "vmz_trafficinfo",
                    "operator": "News",
                    "externalResourceId": "INKO_113388"
                },
                {
                    "category": "Roadworks",
                    "message": "Road Work",
                    "timePeriod": {
                        "from": "2012-04-11T09:00:00+02:00",
                        "to": "2016-05-15T17:00:59+02:00"
                    },
                    "reason": null,
                    "reasonShort": null,
                    "consequence": null,
                    "consequenceShort": null,
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.39682,
                            52.51753
                        ]
                    },
                    "source": "INKO",
                    "affectedTrips": null,
                    "net": [],
                    "description": "Roadworks, new road layout, carriageway reduced to one lane",
                    "type": "IndividualTransport",
                    "uri": null,
                    "provider": "vmz_trafficinfo",
                    "operator": "News",
                    "externalResourceId": "INKO_113041"
                }
            ]



### Getting all incidents [GET]
@testable

+ Response 200

    [List of Incidents][]
    

## List of All Incidents [/imp-endpoint/api/V2/Info/Incidents/All] 

This collection contains a list of recent general incidents (incidents that affect public AND individual transport). 
The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
category | Enum | {"Roadworks", "Blockade", "Indefinition", "Congestion"} are the categories for the incidents with type "IncidentIndividualTransport", {"Construction", "Imbalance", "Diversion", "RailReplacement"} are the categories for incidents with type "IncidentPublicTransport"
message | String | 
timePeriod | Object | Time period of the incident
reason | String | Full description of reason
reasonShort | String |  Short description of reason
consequence | String |  Full description of consequence
consequenceShort | String | Short description of consequence
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
source | String | {= "PT", "INKO", etc.}
affectedTrips | Array | List of affected trips
net | NetType  | 
description | String | Description of an incident information
type | String | There are 2 types of incidents: Incidents with the type "IncidentIndividualTransport" affect individual transport (car, bicycle), incidents with the type "IncidentPublicTransport" affect public transport (bus, tram, etc.).
uri | URI | URI
provider | String | Service provider
operator | Enum | {"News", etc.}
externalResourceId | String | ID in external provider system




### Getting all incidents [GET]
@testable

+ Response 200

    [List of Incidents][]
    
    
    

## List of individual transport Incidents [/imp-endpoint/api/V2/Info/Incidents/IndividualTransport?lat={lat}&lng={lng}&radius={radius}] 

This collection contains list of recent incidents that affect individual transport only in a specified area of interest.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The data structure contains the attributes as in *[/imp-endpoint/api/V2/Info/Incidents?lat={lat}&lng={lng}&radius={radius]* and additionally the roadName attribute.

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `2000`) ... radius in meter. Has example value.
    
+ Model

        [
            {
                "category": "Blockade",
                "message": "Closed Road",
                "timePeriod": {
                    "from": "2014-01-06T11:03:00+01:00",
                    "to": "2014-12-31T23:59:00+01:00"
                },
                "reason": null,
                "reasonShort": null,
                "consequence": null,
                "consequenceShort": null,
                "location": {
                    "type": "Point",
                    "coordinates": [
                        13.385821218640254,
                        52.51680860970485
                    ]
                },
                "source": "Concert",
                "affectedTrips": null,
                "net": [],
                "description": "Roadworks, direction closed",
                "type": "IndividualTransport",
                "uri": null,
                "provider": "vmz_trafficinfo",
                "operator": "News",
                "externalResourceId": "2147338066",
                "roadName": "Unter den Linden (Mitte)"
            },
            {
                "category": "Roadworks",
                "message": "Road Work",
                "timePeriod": {
                    "from": "2012-04-11T09:00:00+02:00",
                    "to": "2016-05-15T17:00:59+02:00"
                },
                "reason": null,
                "reasonShort": null,
                "consequence": null,
                "consequenceShort": null,
                "location": {
                    "type": "Point",
                    "coordinates": [
                        13.39682,
                        52.51753
                    ]
                },
                "source": "INKO",
                "affectedTrips": null,
                "net": [],
                "description": "Roadworks, new road layout, carriageway reduced to one lane",
                "type": "IndividualTransport",
                "uri": null,
                "provider": "vmz_trafficinfo",
                "operator": "News",
                "externalResourceId": "INKO_113041",
                "roadName": "Unter den Linden (Mitte)"
            }
        ]


### Getting recent general incidents that affect individual transport only in a specific area. [GET]
@testable

+ Response 200

    [List of individual transport Incidents][]


## List of public transport Incidents [/imp-endpoint/api/V2/Info/Incidents/PublicTransport?lat={lat}&lng={lng}&radius={radius}] 

This collection contains a list of recent incidents that affect public transport only in a specified area.
The area of interest can be defined as:

* an (optinal) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (Optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The data structure contains the attributes as in *[/imp-endpoint/api/V2/Info/Incidents?lat={lat}&lng={lng}&radius={radius]* and additionally information about line name, first and last stop and line direction.

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `2000`) ... radius in meter. Has example value.

+ Model (application/json)

    + Body
    
            [
                {
                    "category": "ConstructionProject",
                    "message": "Disruption",
                    "timePeriod": {
                        "from": "2013-08-26T01:00:00+02:00",
                        "to": null
                    },
                    "reason": "Sperrung wegen Bauarbeiten der BVG",
                    "reasonShort": "Sperrung wegen Bauarbeiten der BVG",
                    "consequence": "Die Linie verkehrt nur zwischen Riesaer Str. und S Hackescher Markt. Die Haltestellen zwischen S Hackescher Markt und U Schwartzkopffstr. werden nicht bedient. Ein Ersatzverkehr mit Bussen ist nicht eingerichtet. Fahrempfehlung: Fahrgäste in Richtung U Schwartzkopffstr. nutzen zur Weiterfahrt bitte die Linien M1 bzw. 12 von der Haltestelle S Hackescher Markt in der Rosenthaler Str. bis U Oranienburger Tor bzw. die S-Bahn bis S+U Friedrichstr. und von dort die U6 in Richtung Alt-Tegel.",
                    "consequenceShort": "Bauarbeiten, Sperrung Streckenabschnitt lnvalidenstr./Chausseestr. &lt;&gt; U Schwartzkopffstr.",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.40267888888889,
                            52.52165861111111
                        ]
                    },
                    "source": "PT",
                    "affectedTrips": null,
                    "net": [],
                    "description": "Baumaßnahme",
                    "type": "PublicTransport",
                    "uri": null,
                    "provider": "vmz_trafficinfo",
                    "operator": "News",
                    "externalResourceId": "BVG50554",
                    "direction": "Beide",
                    "firstStop": "S Hackescher Markt",
                    "lastStop": "S Hackescher Markt",
                    "lineName": {
                        "name": "M6",
                        "trafficType": "Tram"
                    }
                },
                {
                    "category": "Diversion",
                    "message": "Disruption",
                    "timePeriod": {
                        "from": "2014-07-02T04:00:00+02:00",
                        "to": null
                    },
                    "reason": "Sperrung wegen Bauarbeiten",
                    "reasonShort": "Sperrung wegen Bauarbeiten",
                    "consequence": "Die Linie muss in Fahrtrichtung S+U Zoologischer Garten über Caroline-Michaelis-Str., Julie-Wolfthorn-Str., Zinnowitzer Str., Chausseestr., Habersaathstr. und Schwarzer Weg umgeleitet werden.",
                    "consequenceShort": "Bauarbeiten, Umleitung",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.382412777777777,
                            52.53041916666667
                        ]
                    },
                    "source": "PT",
                    "affectedTrips": null,
                    "net": [],
                    "description": "Umleitung / geänderte Haltestellenbedienung",
                    "type": "PublicTransport",
                    "uri": null,
                    "provider": "vmz_trafficinfo",
                    "operator": "News",
                    "externalResourceId": "BVG54186",
                    "direction": "Beide",
                    "firstStop": "S Nordbahnhof/Gartenstr.",
                    "lastStop": "Invalidenpark",
                    "lineName": {
                        "name": "245",
                        "trafficType": "Bus"
                    }
                }
            ]



### Getting recent general incidents that affect public transport only in a specific area. [GET]
@testable

+ Response 200

    [List of public transport Incidents][]


# Group Geo Locations


## Geo Locations [/imp-endpoint/api/V2/Info/GeoLocations?address={address}&language={language}&lat={lat}&lng={lng}]

Get list of geo locations for given parameters. Matching locations including geo-coordinates will be provided for a given textual address.


### Get list of geo locations [GET]
@testable

attribute | json data type | comments
--- | --- | ---
address | String | a search string
lat | String | prioritized latitude 
lng | String | prioritized Longitude
language | String | international abbreviation for language
+ Parameters
    + address (string, `Berlin, Mollstrasse 7`) ... Search string. Has example value.
    + lat (number, `52.4827802220`, optional) ... Prioritized latitude value. The results will be ranked according to the given geo-coordinate. Rigth now this parameter has no effect. Has example value.
    + lng (number, `13.3154296875`, optional) ... Prioritized longitude value. The results will be ranked according to the given geo-coordinate. Rigth now this parameter has no effect. Has example value.
    + language (string, `en`, optional) ... International abbreviation of language in which the content will be provided, if it is available in this language. Has example value.
+ Response 200 (application/json)

        [
            {
                "searchLocation": "Berlin, Mollstrasse 7",
                "rankedLocations": [
                    {
                        "type": "Place",
                        "description": "Berlin (Germany)",
                        "location": {
                           "coordinates": [
                                13.421097,
                                52.5236814
                           ],
                           "type": "Point"
                        },
                        "rank": null,
                        "geocoder": "PhotonGeocoder",
                        "address": {
                            "citycode": "10178",
                            "city": "Berlin",
                            "street": "Mollstraße",
                            "houseno": "7",
                            "district": null,
                            "region": "Berlin",
                            "country": "Germany"
                        }
                    },
                    {
                        "type": "Amenity",
                        "description": "Kita Traumzauberbaum, Berlin (Germany)",
                        "location": {
                            "coordinates": [
                                13.421197012371714,
                                52.52326395
                            ],
                            "type": "Point"
                        },
                        "rank": null,
                        "geocoder": "PhotonGeocoder",
                        "address": {
                            "citycode": "10178",
                            "city": "Berlin",
                            "street": "Mollstraße",
                            "houseno": "7a",
                            "district": null,
                            "region": "Berlin",
                            "country": "Germany"
                        }
                    }
                ]
            }
        ]

# Group Service Categories

This is a group of all REST resources related to available service categories. Services offered by service providers have to be classified with one of these service categories.


## Service Categories [/imp-endpoint/api/V2/ServiceCategories] 

RESPONSE:
This collection contains a list of all currently available service categories in IMP. Each service category has the following attributes:

attribute | json data type | comments
--- | --- | ---
id | Number | internal id
name | String | Service Category name

+ Model (application/json)
    
        [
            {
                "id": 33,
                "name": "BikeSharing"
            },
            {
                "id": 126351,
                "name": "CarJourneyPlanner"
            },
            {
                "id": 32,
                "name": "CarSharing"
            },
            {
                "id": 34,
                "name": "EVCharging"
            },
            {
                "id": 38,
                "name": "GeoCoding"
            },
            {
                "id": 36,
                "name": "JourneyPlanner"
            },
            {
                "id": 28,
                "name": "Parking"
            },
            {
                "id": 29,
                "name": "PublicTransport"
            },
            {
                "id": 37,
                "name": "TaxiService"
            },
            {
                "id": 31,
                "name": "Ticketing"
            },
            {
                "id": 30,
                "name": "TrafficInfo"
            },
            {
                "id": 35,
                "name": "WMS"
            }
        ]



### Show service categories [GET]
@testable

+ Response 200
    
    [Service Categories][]
    
            

# Group Process Definitions

Some of IMP resources are linked to BPMN processes. These resources contain actions in the URL, similar to "Resources/Parking/Garages/270113/Process?action=consume"
This group describes REST resources which can be used to list possible BPMN process definitions.


## Process Definitions for Service Usage [/imp-endpoint/api/V2/ProcessDefinitions/ServiceUsage] 

RESPONSE:
This collection contains a list of process definitions of the type service usage. Each process has the following attributes:

attribute | json data type | comments
--- | --- | ---
id | String | Process id
name | String | Process name
description | String | 
processCategory | String | Category of the process (ServiceUsage, ...)
requiredFeatures | Array | List of features (BOOKING, CANCELATION, etc.)

+ Model (application/json)
    
        [
            {
                "id": "bookingWithCancelation",
                "name": "Booking / Cancelation",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "BOOKING",
                    "CANCELATION"
                ]
            },
            {
                "id": "bookingWithoutCancelation",
                "name": "Booking",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "BOOKING"
                ]
            },
            {
                "id": "handyticketBookingProcess",
                "name": "HandyTicket Booking",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "BUY",
                    "CONFIRM"
                ]
            },
            {
                "id": "vmzParkingGarage",
                "name": "Parking Garage",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "CONSUME",
                    "RELEASE"
                ]
            }
        ]



### getting service usage BPMN process definitions [GET]
@testable

+ Response 200
    
    [Process Definitions for Service Usage][]

## Process Definitions for Service Subscription [/imp-endpoint/api/V2/ProcessDefinitions/ServiceSubscription] 

RESPONSE:
This collection contains a list of process definitions of the type service subscription. Each process has the following attributes:

attribute | json data type | comments
--- | --- | ---
id | String | Process id
name | String | Process name
description | String | 
processCategory | String | Category of the process (ServiceUsage, ...)
requiredFeatures | Array | List of features (BOOKING, CANCELATION, etc.)

+ Model (application/json)
    
        [
            {
                "id": "subscribePublicFree",
                "name": "Public & free",
                "description": null,
                "processCategory": "ServiceSubscription",
                "requiredFeatures": []
            },
            {
                "id": "subscribeWithAcceptance",
                "name": "Acceptance process",
                "description": null,
                "processCategory": "ServiceSubscription",
                "requiredFeatures": []
            },
            {
                "id": "subscribeWithAutomaticAcceptance",
                "name": "Automatic acceptance",
                "description": null,
                "processCategory": "ServiceSubscription",
                "requiredFeatures": []
            }
        ]


### getting service subscription BPMN process definitions [GET]
@testable

+ Response 200
    
    [Process Definitions for Service Subscription][]

# Group System Configuration
This group contains all System related configuration interfaces.


## Get System Business Area Info [/imp-endpoint/api/V2/ApplicationInfo/SystemBusinessArea] 

This collection contains a list of System Business Areas served by SiMobility Connect. The individual business areas are specified as polygons.

attribute | json data type | comments
--- | --- | ---
businessBoundary | Object | List of MultiPolygon in Geojson format.

+ Model (application/json)

    + Body
    
            {
                "operator": null,
                "description": null,
                "serviceCategory": null,
                "businessBoundary": {
                "disjunctedBoundary": {
                    "coordinates": [
                        [
                            [
                                [
                                    13.0891553,
                                    52.3396296
                                ],
                                [
                                    13.0891553,
                                    52.6754542
                                ],
                                [
                                    13.7611176,
                                    52.6754542
                                ],
                                [
                                    13.7611176,
                                    52.3396296
                                ],
                                [
                                    13.0891553,
                                    52.3396296
                                ]
                            ]
                        ],
                        [
                            [
                                [
                                    12.69987378269434,
                                    52.29123
                                ],
                                [
                                    12.69987378269434,
                                    52.710410244573964
                                ],
                                [
                                    14.106124117970467,
                                    52.710410244573964
                                ],
                                [
                                    14.106124117970467,
                                    52.29123
                                ],
                                [
                                    12.69987378269434,
                                    52.29123
                                ]
                            ]
                        ],
                        [
                            [
                                [
                                    11.32715,
                                    48.034301
                                ],
                                [
                                    11.32715,
                                    48.260096
                                ],
                                [
                                    11.757894,
                                    48.260096
                                ],
                                [
                                    11.757894,
                                    48.034301
                                ],
                                [
                                    11.32715,
                                    48.034301
                                ]
                            ]
                        ],
                        [
                            [
                                [
                                    9.730132,
                                    53.396286
                                ],
                                [
                                    9.730132,
                                    53.739434
                                ],
                                [
                                    10.32528,
                                    53.739434
                                ],
                                [
                                    10.32528,
                                    53.396286
                                ],
                                [
                                    9.730132,
                                    53.396286
                                ]
                            ]
                        ],
                        [
                            [
                                [
                                    6.772582,
                                    50.829527
                                ],
                                [
                                    6.772582,
                                    51.084963
                                ],
                                [
                                    7.162063,
                                    51.084963
                                ],
                                [
                                    7.162063,
                                    50.829527
                                ],
                                [
                                    6.772582,
                                    50.829527
                                ]
                            ]
                        ],
                        [
                            [
                                [
                                    6.688762,
                                    51.124375
                                ],
                                [
                                    6.688762,
                                    51.352534
                                ],
                                [
                                    6.939939,
                                    51.352534
                                ],
                                [
                                    6.939939,
                                    51.124375
                                ],
                                [
                                    6.688762,
                                    51.124375
                                ]
                            ]
                        ]
                    ],
                    "type": "MultiPolygon",
                    "crs": {
                        "type": "name",
                        "properties": {
                            "name": "WGS84"
                        }
                    }
                },
                "negatedBoundary": null
                }
            }


### Getting all System Business Areas [GET]
@testable

+ Response 200

    [Get System Business Area Info][]
    
    
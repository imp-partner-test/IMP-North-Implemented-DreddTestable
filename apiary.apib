FORMAT: 1A
HOST: https://as.production.imp.mobilitaetsdienste.de:8443/imp-endpoint

# IMP North. Implemented & Dredd testable
This is a test API which can be automatically tested with the Dredd Tool.

# Group Car Sharing
This is a group of car sharing rest resources

## Car Sharing Locations Collection. Basic Info [/imp-endpoint/api/V1/Resources/CarSharing/All?lat={lat}&lng={lng}&radius={radius}] 

This collection contains list of available car sharing locations, both free-floating and/or station-based specified by the query parameters, 
with basic information and a URI to acquire more details.
In case of station-based cars, only the URI of the Car Sharing station is returned; 
in case of free-floating cars, the URI to the car itself.

The data structure contains the following attributes:

attribute | json data type | comments
--- | --- | ---
actions | Array | 
id | Number | 
description | String | License ID or approximate location
type | String | 
uri | URI | URI
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider | String | 
operator | String | 

### Getting all car sharing locations [GET]
@testable

+ Parameters
    + lat (string, `52.52`) ... String `lat` latitude value. Has example value.
    + lng (string, `13.39`) ... String `lng` longitude value. Has example value.
    + radius (string, `1000`) ... String `radius` longitude value. Has example value.
    
        
        
+ Response 200 (application/json)

        {
            "metaData": [
                {
                  "serviceAlias": "flinkster",
                  "lastUpdateTime": "2014-05-05T13:38:25+0200",
                  "messages": []
                },
                {
                  "serviceAlias": "car2Go",
                  "lastUpdateTime": "2014-05-05T13:38:25+0200",
                  "messages": []
                }
              ],
              "resources": [
                {
                  "actions": [
                    {
                      "name": "book",
                      "method": "POST",
                      "uri": "Resources/CarSharing/Stations/889/Process?action=book"
                    }
                  ],
                  "id": 889,
                  "description": "Buchholzer Straße",
                  "type": "Stations",
                  "uri": "Resources/CarSharing/Stations/889",
                  "location": {
                    "latitude": 52.5450682735031,
                    "longitude": 13.414923548698425,
                    "system": "WGS_84"
                  },
                  "provider": "FlinksterDB",
                  "operator": "FlinksterDB"
                },
                {
                  "actions": [
                    {
                      "name": "book",
                      "method": "POST",
                      "uri": "Resources/CarSharing/Stations/890/Process?action=book"
                    }
                  ],
                  "id": 890,
                  "description": "U-Bahnhof Warschauer Straße",
                  "type": "Stations",
                  "uri": "Resources/CarSharing/Stations/890",
                  "location": {
                    "latitude": 52.505210141223934,
                    "longitude": 13.450025618076324,
                    "system": "WGS_84"
                  },
                  "provider": "FlinksterDB",
                  "operator": "FlinksterDB"
                }
            ]
        }        


# Group Car Sharing be
This is a group of car sharing rest resources

## Free-floating Cars Collection. Basic Info [/imp-endpoint/api/V1/Resources/CarSharing/Cars?lat={lat}&lng={lng}&radius={radius}&f_cars={fuelTypeJson}]

### Getting free-floating Cars [GET] 
@testable
Get list of available free-floating cars in a specific area (NOTE: for free-floating car sharing only!).
The optional filter `f_cars` can be used to get cars with a specific `fuelType`

+ Parameters
    + lat (string, `52.52`) ... String `lat` latitude value. Has example value.
    + lng (string, `13.39`) ... String `lng` longitude value. Has example value.
    + radius (string, `3000`) ... String `radius` radius value. Has example value.
    + fuelTypeJson (optional, string, `{"fuelType":"ELECTRICITY"}`) ... String `fuelTypeJson` fuel type json data. Example value `{"fuelType":"ELECTRICITY"}` or `{"fuelType":"PETROL"}`
    
        
        
+ Response 200 (application/json)

        {
          "metaData": [
              {
                  "serviceAlias": "flinkster",
                  "lastUpdateTime": "2014-07-02T14:56:08+0200",
                  "messages": []
              },
              {
                  "serviceAlias": "car2Go",
                  "lastUpdateTime": "2014-07-02T15:16:40+0200",
                  "messages": []
              },
              {
                  "serviceAlias": "citeeCar",
                  "lastUpdateTime": "2014-07-02T14:41:34+0200",
                  "messages": []
              }
          ],
          "resources": [
              {
                  "actions": [
                      {
                          "name": "book",
                          "method": "POST",
                          "uri": "Resources/CarSharing/Cars/55113/Process?action=book"
                      }
                  ],
                  "id": 55113,
                  "description": "B-GO4002",
                  "type": "CarSharingCar",
                  "uri": "Resources/CarSharing/Cars/55113",
                  "location": {
                      "latitude": 52.50698,
                      "longitude": 13.37455,
                      "system": "WGS_84"
                  },
                  "provider": "car2Go",
                  "availability": 100,
                  "operator": "Car2Go_Berlin",
                  "model": "smart fortwo",
                  "address": null,
                  "licenseId": "B-GO4002",
                  "category": null,
                  "fuelType": "ELECTRICITY",
                  "fuelLevel": null,
                  "imageLink": null
              },
              {
                  "actions": [
                      {
                          "name": "book",
                          "method": "POST",
                          "uri": "Resources/CarSharing/Cars/53962/Process?action=book"
                      }
                  ],
                  "id": 53962,
                  "description": "B-GO4015",
                  "type": "CarSharingCar",
                  "uri": "Resources/CarSharing/Cars/53962",
                  "location": {
                      "latitude": 52.51921,
                      "longitude": 13.41275,
                      "system": "WGS_84"
                  },
                  "provider": "car2Go",
                  "availability": 100,
                  "operator": "Car2Go_Berlin",
                  "model": "smart fortwo",
                  "address": null,
                  "licenseId": "B-GO4015",
                  "category": null,
                  "fuelType": "ELECTRICITY",
                  "fuelLevel": null,
                  "imageLink": null
              }
          ]
      }
        
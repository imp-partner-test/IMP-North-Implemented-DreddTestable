FORMAT: 1A
HOST: https://cluster.production.imp.mobilitaetsdienste.de:8443

# IMP North. Implemented & Dredd testable
This apiary project describes the API version V2 of SiMobility Connect. 

Host V2: https://muc-staging-v2.jelastic.dogado.eu

Host V1: https://muc-staging-imp.jelastic.dogado.eu

cml host: http://cml-staging.jelastic.dogado.eu (only IMR is working)


# Group Bike Sharing
This is a group of all bike sharing related REST resources.
    

## Bike Sharing Stations [/imp-endpoint/api/V2/Resources/BikeSharing/Stations?lat={lat}&lng={lng}&radius={radius}]    
This collection contains a list of all bike sharing stations in an area of interest specified by query parameters.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format for, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The data structure of the response contains the following attributes: 

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | Available actions
id | Number | Internal bike sharing station identification number
description | String | Approximate location
type | String | Type of bike sharing station
uri | URI | URI to request more details.
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
availability | Double | Availability in percentage
operator | String | Resource operator
phoneNo | String | 
operatorURI | String |
operatorName | String | Resource operator
address | Object | 
numberOfBikes | Number | Number of bikes or storing positions
numberOfFreeBikes | Number | Number of currently available bikes
services | Array | 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request.

Parts of the data structure might be omitted if the information is not available. 
    

### Getting bikes [GET]
@testable

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `5000`) ... radius in meter. Has example value.
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)

        {
            "metaData": [
                {
                    "serviceAlias": "callabike",
                    "lastUpdateTime": "2014-07-10T14:23:11+02:00",
                    "messages": []
                },
                {
                    "serviceAlias": "nextbike",
                    "lastUpdateTime": "2014-07-10T14:11:02+02:00",
                    "messages": []
                }
            ],
            "resources": [ ]
        }

# Group Parking
This is a group of all parking related REST resources including Parking Garages and On-street Parking Vacancies.
    

## Parking Garages with Basic Info [/imp-endpoint/api/V2/Resources/Parking/Garages?lat={lat}&lng={lng}&radius={radius}&f_garages={categoryJson}]  
This collection contains a list of all parking garages in an area of interest specified by query parameters together with an URI to acquire more details. Parking garages can be filtered by category.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource (book, cancel, etc.)
id | Number | Internal parking garage identification number
description | String | Approximate location
type | String | (="ParkingGarage")
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider (usually equals operator)
availability | Double | Availability in percentage
operator | String | Parking space operator (usually equals provider)
totalnumber | Object | Number of lots for different categories { "handicappedOnly":Int, "womenOnly":Int, "others":Int }
lottype | Enum | Type of garage {"Parking garage", "Parking zone", "Underground car park", "Parking lot"} 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request. 

Parts of the data structure might be omitted if the information is not available. 
    

### Getting parking garages [GET]
@testable

+ Parameters
    + lat (optional, number, `52.52`) ... latitude value. Has example value.
    + lng (optional, number, `13.39`) ... longitude value. Has example value.
    + radius (optional, number, `10000`) ... radius in meter. Has example value.
    + categoryJson (optional, string, `{"category": ["P%2BR"]}`) ... String `categoryJson` category json data, containing a list of possible category values combined by OR. Example value `{"category":["P%2BR"]}` or `{"category":["P"]}`, P%2BR stands for P+R

    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)   

        {
            "metaData": [
                {
                    "serviceAlias": "vmzParking",
                    "lastUpdateTime": "2014-12-16T10:14:46+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "city2eParking",
                    "lastUpdateTime": "2014-12-16T10:35:46+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "parkUParking",
                    "lastUpdateTime": "2014-12-16T10:35:46+01:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/50368/Process?action=consume"
                        }
                    ],
                    "id": 50368,
                    "description": "P+R Alt-Mariendorf (U)",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/50368",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.3900337219238,
                            52.439266204834
                        ]
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "PR",
                    "totalnumber": {
                        "others": 125,
                        "handicappedOnly": null,
                        "womenOnly": null
                    },
                    "lottype": null
                },
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/50050/Process?action=consume"
                        }
                    ],
                    "id": 50050,
                    "description": "P+R Tempelhof (S + U)",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/50050",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.3851003646851,
                            52.4693984985352
                        ]
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "PR",
                    "totalnumber": {
                        "others": 70,
                        "handicappedOnly": null,
                        "womenOnly": null
                    },
                    "lottype": null
                },
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/50399/Process?action=consume"
                        }
                    ],
                    "id": 50399,
                    "description": "P+R Heidelberger Platz (S + U)",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/50399",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.3121109008789,
                            52.4807777404785
                        ]
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "PR",
                    "totalnumber": {
                        "others": 140,
                        "handicappedOnly": null,
                        "womenOnly": null
                    },
                    "lottype": null
                }
            ]
        }


## OnStreet Parking Spaces [/imp-endpoint/api/V2/Resources/Parking/OnStreetSpaces?lat={lat}&lng={lng}&radius={radius}&f_onStreetSpaces={sizeJson}]
This collection contains a list of OnStreet parking spaces for specified size in an area of interest specified by query parameters together with an URI to acquire more details. OnStreet parking spaces can be filtered by the space size (Small, Medium or Large).
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource (currently no actions available)
id | Number | Internal OnStreet parking space identification number
description | String | Approximate location
type | String | (="ParkingOnStreetSpace")
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Parking service provider (usually equals operator)
availability | Double | Availability in percentage
operator | String | Parking space operator (usually equals provider)
size | Enum | Size of OnStreet parking space {"Large", "Medium", "Small", "Unknown"} 
accessibility | Enum | Accessibility of OnStreet parking space {"Private","Public","SemiPublic","Unknown"}
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request. 

Parts of the data structure might be omitted if the information is not available. 


### Getting OnStreet parking [GET]
@testable

+ Parameters
    + lat (optional, number, `48.13`) ... latitude value. Has example value.
    + lng (optional, number, `11.59`) ... longitude value. Has example value.
    + radius (optional, number, `5000`) ... radius in meter. Has example value.
    + sizeJson (optional, string, `{"size":"Medium"}`) ... String `sizeJson` size json data. Example value `{"size":"Large"}` or `{"size":"Medium"}`

+ Request

    + Headers

            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 

+ Response 200 (application/json)   

        {
            "metaData": [
                {
                    "serviceAlias": "vmzParking",
                    "lastUpdateTime": "2014-12-02T15:59:01+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "city2eParking",
                    "lastUpdateTime": "2014-12-02T16:27:45+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "parkUParking",
                    "lastUpdateTime": "2014-12-02T16:27:50+01:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [],
                    "id": 239,
                    "description": "Einemstraße",
                    "type": "ParkingOnStreetSpace",
                    "uri": "Resources/Parking/OnStreetSpaces/239",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.352953,
                            52.502795
                        ]
                    },
                    "provider": "parkUParking",
                    "availability": 100,
                    "operator": "ParkU",
                    "size": "Large",
                    "accessibility": null
                }
            ]
        }

## All Parking Garages or OnStreet parking spaces or both [/imp-endpoint/api/V2/Resources/Parking/All?f_onStreetSpaces={sizeJson}&f_garages={categoryJson}]    
This collection contains a list of all parking garages or OnStreet parking spaces or both in an area of interest. The parking possibilities can be filtered by garage category (viz. P+R or P) or space size (Small, Medium or Large).

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The response contains attributes from parking garages or OnStreet parking spaces or both.

Parts of the data structure might be omitted if the information is not available. 
    

### Getting all parking garages or OnStreet parking spaces or both with specified size and category [GET]
@testable

+ Parameters
    + sizeJson (optional, string, `{"size":"Large"}`) ... String `sizeJson` size json data. Example value `{"size":"Large"}` or `{"size":"Medium"}`or `{"size":"Small"}
    + categoryJson (optional, string, `{"category": ["P%2BR"]}`) ... String `categoryJson` category json data. Example value `{"category" : ["P%2BR"]}` or `{"category": ["P"]}`
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)   

        {
            "metaData": [
                {
                    "serviceAlias": "vmzParking",
                    "lastUpdateTime": "2014-11-20T12:55:14+01:00",
                    "messages": []
                                    },
                {
                    "serviceAlias": "city2eParking",
                    "lastUpdateTime": "2014-11-20T13:22:50+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "parkUParking",
                    "lastUpdateTime": "2014-11-20T13:22:54+01:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [],
                    "id": 2838,
                    "description": "Lohmeyerstraße",
                    "type": "OnStreetSpaces",
                    "uri": "Resources/Parking/OnStreetSpaces/2838",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.301087,
                            52.517519
                        ]
                    },
                    "provider": "parkUParking",
                    "availability": 100,
                    "operator": "ParkU"
                },
                {
                    "actions": [],
                    "id": 239,
                    "description": "Einemstraße",
                    "type": "OnStreetSpaces",
                    "uri": "Resources/Parking/OnStreetSpaces/239",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.352953,
                            52.502795
                        ]
                    },
                    "provider": "parkUParking",
                    "availability": 100,
                    "operator": "ParkU"
                }
            ]
        }

# Group Journey Planner. IMR
This is a group of all IMR journey planner related REST resources.


## List of Trip Proposals with Basic Info. Intermodal Router [/imp-endpoint/api/V2/TripProposals/IMR] 

This collection contains a list of trip proposals with basic information for specified trip criteria. Note: The trip proposals can be multimodal or intermodal, depending on which routing service the mobility provider of the user is subscribed to.

The data structure of collection contains a list of trip proposals. Each trip proposal contains the following attributes:

attribute | json data type | comments
--- | --- | ---
url | URI | URI to request more details
origin | Object | Start point of the proposed trip
destination | Object | Endpoint of the proposed trip
trafficTypes | Array | List of traffic types used in the proposed trip. Possible values: Bike, Bus, Car, CityTrain, Ferry, Metro, Other, RegioTrain, Unknown, Train, Tram, Walk, UBahn. The trafficType Other is used in the segments for the start/stop procedures of car rental/parking.
description | String | Description of the trip proposal
costs | Array | List of costs for the proposed trip including distance, duration, price, etc.

    
+ Model (application/json)

    + Body
    
            {
                  "metaData": [
                    {
                      "serviceAlias": "vmzImrRouting",
                      "lastUpdateTime": "2014-12-23T12:35:43+00:00",
                      "messages": []
                    }
                  ],
                  "tripProposals": [
                    {
                      "url": "TripProposals/IMR/11873",
                      "origin": {
                        "location": {
                          "type": "Point",
                          "coordinates": [
                            13.4113422,
                            52.5218455
                          ]
                        },
                        "address": "Dircksenstraße, 10178 Berlin, Germany",
                        "time": "2013-07-23T13:10:00+00:00"
                      },
                      "destination": {
                        "location": {
                          "type": "Point",
                          "coordinates": [
                            13.3194514,
                            52.5635387
                          ]
                        },
                        "address": "Meteorstraße 40, 13405 Berlin, Germany",
                        "time": "2013-07-23T13:43:26+00:00"
                      },
                      "trafficTypes": [
                        "OwnBike"
                      ],
                      "description": null,
                      "costs": {
                        "distance": {
                          "unit": "meter",
                          "value": 8929
                        },
                        "duration": {
                          "unit": "minute",
                          "value": 33.43333333333333
                        },
                        "price": {
                          "unit": "Euro",
                          "value": 0
                        },
                        "emission": {
                          "unit": "gram",
                          "value": 0
                        },
                        "ticketPrice": null
                      }
                    },
                    {
                      "url": "TripProposals/IMR/11874",
                      "origin": {
                        "location": {
                          "type": "Point",
                          "coordinates": [
                            13.4113422,
                            52.5218455
                          ]
                        },
                        "address": "Dircksenstraße, 10178 Berlin, Germany",
                        "time": "2013-07-23T13:10:00+00:00"
                      },
                      "destination": {
                        "location": {
                          "type": "Point",
                          "coordinates": [
                            13.3194514,
                            52.5635387
                          ]
                        },
                        "address": "Meteorstraße 40, 13405 Berlin, Germany",
                        "time": "2013-07-23T15:17:54+00:00"
                      },
                      "trafficTypes": [
                        "Other",
                        "BikeSharing",
                        "Walk"
                      ],
                      "description": null,
                      "costs": {
                        "distance": {
                          "unit": "meter",
                          "value": 10264
                        },
                        "duration": {
                          "unit": "minute",
                          "value": 127.9
                        },
                        "price": {
                          "unit": "Euro",
                          "value": 0.024444444444444442
                        },
                        "emission": {
                          "unit": "gram",
                          "value": 0
                        },
                        "ticketPrice": null
                      }
                    }
                ]
            }



### Getting Trip Proposals by IMR Planner  [POST]
@testable

Selection criteria for trip proposals is specified in the request body as described in the sample request with the following attributes:

attribute | json data type | comments
--- | --- | ---
origin | Object | Start point specified by a geo location (optionally can also include starttime). Addresses can be converted into geo locations by means of "GET /Resources/GeoLocations".
destination | Object | End point specified by a geo location (optional can also include endtime). Note if time in the origin is specified, time in the destination is discarded! If no time is specified current time is taken.
viapoints | Array of Objects | List of geolocations the route should pass in the given sequence
costfunctions | Array of Objects | List of cost factors, (such as Distance, Duration, Price, Emission), each with a percentaged weight. Sample cost function: {"costType":"Duration","percentage":"100"}
ownVehicles | Array of Objects | List of own vehicles which may be included in trip proposal calculation. Sample object value {"trafficType":"Car", "useParking":true,"useParkAndRide":false, "location":{"type": "Point", "coordinates": [13.064472900000055, 52.3905689]}}
userId | String | Traveller id that requests a trip. Note: Currently it is not used by IMP and can be any string.
trafficTypes | Array | List of traffic types which should be included into trip proposal calculation. Currently possible: Bike, Bus, Car, CityTrain, Ferry, Metro, RegioTrain, Unknown, Train, Tram, Walk, UBahn. 
routingConstraints | Array of Objects | List of constraints to be taken into account for various traffic types, specified by min/max values. E.g. maximal distance in meters the traveler agrees to walk: {"routingConstraintType": "Distance", "trafficType": "Walk", "min": { "value": 0,"unit": "meter" }, "max":{"value":600, "unit":"meter"}}
useBikeSharing | Boolean | Use bike sharing services for routing [default: false]
useCarSharing | Boolean | Use car sharing services for routing [default: false]

Notes:
- IMR also provides routes in the past, but not for public transport
- The IMR takes into account information about current traffic situation (traffic jams/road works/...) for route calculation.
- Traveling time costs for proposed journeys include the following extra times: 2 minutes set-up time and 1 minute return time for free-floating car sharing and bike sharing; 2 minutes set-up time and 0 minutes return time for station-based car and bike sharing, 5 minutes parking time for free-floating car sharing and own car.




+ Request

    + Headers
    
            Content-Type: application/json
            Accept: application/json

    + Body
        
            {
              "origin": {
                "location": {"type": "Point", "coordinates": [ 13.41100700000004, 52.521642 ]}
              },
              "destination": {
                "location": {"type": "Point", "coordinates": [ 13.319420000000036, 52.56347100000001 ]}
              },
              "time": "2013-07-23T15:10:00+02:00",
              "departureTime":"true",
              "costFunctions": [
                {
                  "costType": "Price",
                  "percentage": 100
                }
              ],
              "userId": "4711/10",
              "trafficTypes": ["Walk","Bike","Car","Metro","CityTrain","Bus"],
              "routingConstraints": [],
              "ownVehicles": [
                {
                    "trafficType": "Car",
                    "location": {"type": "Point", "coordinates": [ 13.41100700000004, 52.521642 ]},
                    "useParking": "false",
                    "useParkAndRide": "true",
                    "cost":{"price":{"price":{"value": 2, "currency":"Euro"},"distance":{"value":1, "unit":"kilometer"}}, "emission":{"mass":{"value": 2, "unit":"gram"},"distance":{"value":1, "unit":"kilometer"}}}
                },
                {
                    "trafficType": "Bike",
                    "location": {"type": "Point", "coordinates": [ 13.41100700000004, 52.521642 ]}
                } 
              ],
              "maxRoutingResponses": 4,
              "numOfTravelers" : 2,
              "numOfLuggage" : 2,
              "useTrafficSituation" : true
            }

+ Response 200

    [List of Trip Proposals with Basic Info. Intermodal Router][]


# Group Public Transport
This is a group of all public transportation related rest resources.


## List of Public Transport Stations with Basic Info [/imp-endpoint/api/V2/Resources/PublicTransport/Stations?lat={lat}&lng={lng}&radius={radius}&f_stations={f_stations}] 

This collection contains list stations (U-Bahn/S-Bahn/train/bus/tram) in a specific area with basic information and a URI to get more details.
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The optional filter `f_stations` can be used to get the stations with a particular   `stationType`

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time. Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
description | String | Approximate location
type | String | (="PublicTransportStation")
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Bus/tram (="VBBStation"), metro (="VBBStationU"), S-Bahn (="VBBStationS")
availability | Double | Availability in percentage
operator | String | Bus/tram (="VBBStation"), metro (="VBBStationU"), S-Bahn (="VBBStationS")
stationType | String | BusTramStation, MetroStation, CityTrainStation
platforms | String | Platforms at station
wheelChair | Boolean | Wheel chair availability
lines | Array of Objects | Array of lines departing at the station
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request 


+ Parameters
    + lat (number, `48.13`) ... latitude value. Has example value.
    + lng (number, `11.59`) ... longitude value. Has example value.
    + radius (number, `500`) ... radius in meter. Has example value.
    + f_stations (optional, string, `{"stationType":"BusTramStation"}`) ... String `f_stations` filter value. Has example value.
+ Model (application/json)

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "vmzStation",
                        "lastUpdateTime": "2015-01-07T07:14:23+00:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "osmBerlinStation",
                        "lastUpdateTime": "2015-01-07T07:10:41+00:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "osmMunichStation",
                        "lastUpdateTime": "2015-01-07T07:12:46+00:00",
                        "messages": []
                    }
                ],
                "resources": [
                    {
                        "actions": [],
                        "id": 10573,
                        "description": "Peter-Auzinger-StraÃe",
                        "type": "PublicTransportStation",
                        "uri": null,
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                11.58288,
                                48.098793
                            ]
                        },
                        "provider": "osmMunichStation",
                        "availability": 100,
                        "operator": null,
                        "stationType": "BusTramStation",
                        "platforms": null,
                        "wheelChair": null,
                        "lines": [
                            {
                                "name": "139",
                                "trafficType": "Bus"
                            },
                            {
                                "name": "220",
                                "trafficType": "Bus"
                            }
                        ]
                    },
                    {
                        "actions": [],
                        "id": 10634,
                        "description": "LincolnstraÃe",
                        "type": "PublicTransportStation",
                        "uri": null,
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                11.5904131,
                                48.094374
                            ]
                        },
                        "provider": "osmMunichStation",
                        "availability": 100,
                        "operator": null,
                        "stationType": "BusTramStation",
                        "platforms": null,
                        "wheelChair": null,
                        "lines": [
                            {
                                "name": "220",
                                "trafficType": "Bus"
                            },
                            {
                                "name": "220",
                                "trafficType": "Bus"
                            }
                        ]
                    }
                ]    
            }



### Getting all stations in a specific area [GET]
@testable

+ Request

    + Headers
        
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT

+ Response 200

    [List of Public Transport Stations with Basic Info][]
    
    

## List of All Public Transport Stations with Basic Info [/imp-endpoint/api/V2/Resources/PublicTransport/Stations/All] 

This collection contains list stations (U-Bahn/S-Bahn/train/bus/tram)

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time. Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
description | String | Approximate location
type | String | (="PublicTransportStation")
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Bus/tram (="VBBStation"), metro (="VBBStationU"), S-Bahn (="VBBStationS")
availability | Double | Availability in percentage
operator | String | Bus/tram (="VBBStation"), metro (="VBBStationU"), S-Bahn (="VBBStationS")
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request 

+ Model (application/json)

    + Body
    
            {
                "metaData": [
                    {
                      "serviceAlias": "vmzStation",
                      "lastUpdateTime": "2015-01-07T07:14:23+00:00",
                      "messages": [ ]
                    }
                ],
                "resources": [
                    {
                      "actions": [
                        
                      ],
                      "id": 4498,
                      "description": "HÃ¶now, Erikastr.",
                      "type": "PublicTransportStation",
                      "uri": "Resources/PublicTransport/Stations/PublicTransportStation/4498",
                      "location": {
                        "type": "Point",
                        "coordinates": [
                          13.627082,
                          52.530892
                        ]
                      },
                      "provider": "vmzStation",
                      "availability": 100.0,
                      "operator": "VBBStation",
                      "modFlag": "Modified"  
                    },
                    {
                      "actions": [
                        
                      ],
                      "id": 1306,
                      "description": "S+U Karl-Bonhoeffer-Nervenklinik (Berlin)",
                      "type": "PublicTransportStation",
                      "uri": "Resources/PublicTransport/Stations/PublicTransportStation/1306",
                      "location": {
                        "type": "Point",
                        "coordinates": [
                          13.332921,
                          52.578169
                        ]
                      },
                      "provider": "vmzStation",
                      "availability": 100.0,
                      "operator": "VBBStation",
                      "modFlag": "Modified"
                    }
                ]    
            }



### Getting all stations [GET]
@testable

+ Request

    + Headers
        
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT

+ Response 200

            {
                "metaData": [
                    {
                      "serviceAlias": "vmzStation",
                      "lastUpdateTime": "2015-01-07T07:14:23+00:00",
                      "messages": [ ]
                    }
                ],
                "resources": [
                    {
                      "actions": [
                        
                      ],
                      "id": 4498,
                      "description": "HÃ¶now, Erikastr.",
                      "type": "PublicTransportStation",
                      "uri": "Resources/PublicTransport/Stations/PublicTransportStation/4498",
                      "location": {
                        "type": "Point",
                        "coordinates": [
                          13.627082,
                          52.530892
                        ]
                      },
                      "provider": "vmzStation",
                      "availability": 100.0,
                      "operator": "VBBStation",
                      "modFlag": "Modified"  
                    },
                    {
                      "actions": [
                        
                      ],
                      "id": 1306,
                      "description": "S+U Karl-Bonhoeffer-Nervenklinik (Berlin)",
                      "type": "PublicTransportStation",
                      "uri": "Resources/PublicTransport/Stations/PublicTransportStation/1306",
                      "location": {
                        "type": "Point",
                        "coordinates": [
                          13.332921,
                          52.578169
                        ]
                      },
                      "provider": "vmzStation",
                      "availability": 100.0,
                      "operator": "VBBStation",
                      "modFlag": "Modified"
                    }
                ]    
            }
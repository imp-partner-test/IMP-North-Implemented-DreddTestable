FORMAT: 1A
HOST: https://cluster.production.imp.mobilitaetsdienste.de:8443

# IMP North. Implemented & Dredd testable
This is API in a new format 1A 


# Group Bike Sharing
This is a group of all bike sharing related rest resources
    

## Bike Sharing Stations [/imp-endpoint/api/V1/Resources/BikeSharing/Stations?lat={lat}&lng={lng}&radius={radius}]    
This collection contains a list of all bike sharing stations in an area of interest specified by query parameters. (for station-based bike sharing)
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

The data structure of the response contains the following attributes: 

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | Available actions
id | Number | Internal bike sharing station identification number
description | String | Approximate location
type | String | Type of bike sharing station
uri | URI | URI to request more details.
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider | String | service provider
availability | Double | Availability in percentage
operator | String | resource operator
phoneNo | String | 
operatorURI | String |
operatorName | String | 
address | Object | 
numberOfBikes | Number | 
numberOfFreeBikes | Number | 
services | Array | 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request  

Parts of the data structure might be omitted if the information is not available. 
    

### Getting bikes [GET]
@testable

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `1000`) ... radius value. Has example value.
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)

        {
            "metaData": [
                {
                    "serviceAlias": "callabike",
                    "lastUpdateTime": "2014-07-10T14:23:11+0200",
                    "messages": []
                },
                {
                    "serviceAlias": "nextbike",
                    "lastUpdateTime": "2014-07-10T14:11:02+0200",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [
                        {
                            "name": "book",
                            "method": "POST",
                            "uri": "Resources/BikeSharing/Stations/270210/Process?action=book"
                        }
                    ],
                    "id": 270210,
                    "description": "S+U-Bhf. Friedrichstraße",
                    "type": "BikeSharingStation",
                    "uri": "Resources/BikeSharing/Stations/270210",
                    "location": {
                        "latitude": 52.519676208496094,
                        "longitude": 13.385995864868164,
                        "system": "WGS_84"
                    },
                    "provider": "callabike",
                    "availability": 100,
                    "operator": "CallABike",
                    "modFlag": "Modified",
                    "phoneNo": null,
                    "operatorURI": null,
                    "operatorName": "CallABike",
                    "address": null,
                    "numberOfBikes": 16,
                    "numberOfFreeBikes": 16,
                    "services": null
                },
                {
                    "actions": [
                        {
                            "name": "book",
                            "method": "POST",
                            "uri": "Resources/BikeSharing/Stations/270258/Process?action=book"
                        }
                    ],
                    "id": 270258,
                    "description": "Tucholskystraße / Torstraße",
                    "type": "BikeSharingStation",
                    "uri": "Resources/BikeSharing/Stations/270258",
                    "location": {
                        "latitude": 52.52822494506836,
                        "longitude": 13.392618179321289,
                        "system": "WGS_84"
                    },
                    "provider": "callabike",
                    "availability": 43.75,
                    "operator": "CallABike",
                    "modFlag": "Modified",
                    "phoneNo": null,
                    "operatorURI": null,
                    "operatorName": "CallABike",
                    "address": null,
                    "numberOfBikes": 16,
                    "numberOfFreeBikes": 7,
                    "services": null
                }
            ]
        }
        

## All Bike Sharing Stations [/imp-endpoint/api/V1/Resources/BikeSharing/All]    
This collection contains a list of all bike sharing stations (for station-based bike sharing)

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

The data structure of the response contains the following attributes: 

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | Available actions
id | Number | Internal bike sharing station identification number
description | String | Approximate location
type | String | Type of bike sharing station
uri | URI | URI to request more details.
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider | String | service provider
availability | Double | Availability in percentage
operator | String | resource operator
phoneNo | String | 
operatorURI | String |
operatorName | String | 
address | Object | 
numberOfBikes | Number | 
numberOfFreeBikes | Number | 
services | Array | 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request  

Parts of the data structure might be omitted if the information is not available. 
    

### Getting bikes [GET]
@testable

+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)

        {
          "metaData": [
            {
              "serviceAlias": "callabike",
              "lastUpdateTime": "2014-08-11T13:38:33+0200",
              "messages": [
                
              ]
            },
            {
              "serviceAlias": "nextbike",
              "lastUpdateTime": "2014-08-11T13:38:36+0200",
              "messages": [
                
              ]
            }
          ],
          "resources": [
            {
              "actions": [
                {
                  "name": "book",
                  "method": "POST",
                  "uri": "Resources/BikeSharing/BikeSharingStation/47059/Process?action=book"
                }
              ],
              "id": 47059,
              "description": "Ernst-Reuter-Platz / Marchstraße",
              "type": "BikeSharingStation",
              "uri": "Resources/BikeSharing/BikeSharingStation/47059",
              "location": {
                "latitude": 52.51343536376953,
                "longitude": 13.32278823852539,
                "system": "WGS_84"
              },
              "provider": "callabike",
              "availability": 62.5,
              "operator": "CallABike"
            },
            {
              "actions": [
                {
                  "name": "book",
                  "method": "POST",
                  "uri": "Resources/BikeSharing/BikeSharingStation/47072/Process?action=book"
                }
              ],
              "id": 47072,
              "description": "Wilmersdorfer Straße / Goethestraße",
              "type": "BikeSharingStation",
              "uri": "Resources/BikeSharing/BikeSharingStation/47072",
              "location": {
                "latitude": 52.5088996887207,
                "longitude": 13.306029319763184,
                "system": "WGS_84"
              },
              "provider": "callabike",
              "availability": 68.75,
              "operator": "CallABike"
            }
          ]
        }
        

# Group Car Sharing
This is a group of all car sharing related rest resources


## List of Car Sharing Locations with Basic Info [/imp-endpoint/api/V1/Resources/CarSharing/All?lat={lat}&lng={lng}&radius={radius}] 

This collection contains list of available car sharing locations in an area of interest specified by the query parameters (both free-floating cars and/or car stations) 
with basic information and a URI to acquire more details.
In case of station-based cars, only the URI of the Car Sharing station is returned; in case of free-floating cars, the URI to the car itself.
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})


The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time. Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources
--- | --- | ---
actions | Array | 
id | Number | 
description | String | License ID or approximate location
type | String | 
uri | URI | URI
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider | String | 
availability | Double | Availability in percentage
operator | String | 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request


### Getting all car sharing locations [GET]
@testable

+ Parameters
    + lat (optional, number, `52.52`) ... latitude value. Has example value.
    + lng (optional, number, `13.39`) ... longitude value. Has example value.
    + radius (optional, number, `1000`) ... radius value. Has example value.

+ Request

    + Headers
        
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 

+ Response 200 (application/json)
    
    + Body
    
            {
            "metaData": [
                {
                    "serviceAlias": "driveNow",
                    "lastUpdateTime": "2014-07-09T12:36:24+0200",
                    "messages": []
                },
                {
                    "serviceAlias": "car2Go",
                    "lastUpdateTime": "2014-07-09T12:36:38+0200",
                    "messages": []
                },
                {
                    "serviceAlias": "flinkster",
                    "lastUpdateTime": "2014-07-09T12:36:46+0200",
                    "messages": []
                },
                {
                    "serviceAlias": "citeeCar",
                    "lastUpdateTime": "2014-07-09T12:26:09+0200",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [
                        {
                            "name": "book",
                            "method": "POST",
                            "uri": "Resources/CarSharing/Cars/235787/Process?action=book"
                        }
                    ],
                    "id": 235787,
                    "description": "Philbert",
                    "type": "Cars",
                    "uri": "Resources/CarSharing/Cars/235787",
                    "location": {
                        "latitude": 52.520018,
                        "longitude": 13.390876,
                        "system": "WGS_84"
                    },
                    "provider": "driveNow",
                    "availability": 100,
                    "operator": "DriveNow",
                    "modFlag": "Relocated"
                },
                {
                    "actions": [
                        {
                            "name": "book",
                            "method": "POST",
                            "uri": "Resources/CarSharing/Cars/235788/Process?action=book"
                        }
                    ],
                    "id": 235788,
                    "description": "Chico",
                    "type": "Cars",
                    "uri": "Resources/CarSharing/Cars/235788",
                    "location": {
                        "latitude": 52.513842,
                        "longitude": 13.385001,
                        "system": "WGS_84"
                    },
                    "provider": "driveNow",
                    "availability": 100,
                    "operator": "DriveNow",
                    "modFlag": "Deleted"
                }
                ]
            } 

## List of All Car Sharing Locations with Basic Info [/imp-endpoint/api/V1/Resources/CarSharing/All] 

This collection contains list of all available car sharing locations (both free-floating cars and/or car stations) 
with basic information and a URI to acquire more details.
In case of station-based cars, only the URI of the Car Sharing station is returned; in case of free-floating cars, the URI to the car itself.

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time. Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources
--- | --- | ---
actions | Array | 
id | Number | 
description | String | License ID or approximate location
type | String | 
uri | URI | URI
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider | String | 
availability | Double | Availability in percentage
operator | String | 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request


### Getting all car sharing locations [GET]
@testable

+ Request

    + Headers
        
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 

+ Response 200 (application/json)
    
    + Body
    
            {
              "metaData": [
                {
                  "serviceAlias": "flinkster",
                  "lastUpdateTime": "2014-07-25T11:30:33+0530",
                  "messages": [
                    
                  ]
                },
                {
                  "serviceAlias": "car2Go",
                  "lastUpdateTime": "2014-07-25T11:30:28+0530",
                  "messages": [
                    
                  ]
                },
                {
                  "serviceAlias": "driveNow",
                  "lastUpdateTime": "2014-07-25T11:30:30+0530",
                  "messages": [
                    
                  ]
                },
                {
                  "serviceAlias": "citeeCar",
                  "lastUpdateTime": "2014-07-25T11:30:34+0530",
                  "messages": [
                    
                  ]
                },
                {
                  "serviceAlias": "multiCity",
                  "lastUpdateTime": "2014-07-25T11:30:36+0530",
                  "messages": [
                    
                  ]
                }
              ],
              "resources": [
                {
                  "actions": [
                    {
                      "name": "book",
                      "method": "POST",
                      "uri": "Resources/CarSharing/Stations/7695/Process?action=book"
                    }
                  ],
                  "id": 7695,
                  "description": "U-Bahnhof Senefelder Platz",
                  "type": "Stations",
                  "uri": "Resources/CarSharing/Stations/7695",
                  "location": {
                    "latitude": 52.53166159018624,
                    "longitude": 13.412632271647453,
                    "system": "WGS_84"
                  },
                  "provider": "flinkster",
                  "availability": 0,
                  "operator": "FlinksterDB"
                },
                {
                  "actions": [
                    {
                      "name": "book",
                      "method": "POST",
                      "uri": "Resources/CarSharing/Stations/7683/Process?action=book"
                    }
                  ],
                  "id": 7683,
                  "description": "U-Bahnhof Hermannplatz",
                  "type": "Stations",
                  "uri": "Resources/CarSharing/Stations/7683",
                  "location": {
                    "latitude": 52.48663380523992,
                    "longitude": 13.422980234026909,
                    "system": "WGS_84"
                  },
                  "provider": "flinkster",
                  "availability": 0,
                  "operator": "FlinksterDB"
                },
                {
                  "actions": [
                    {
                      "name": "book",
                      "method": "POST",
                      "uri": "Resources/CarSharing/Cars/7884/Process?action=book"
                    }
                  ],
                  "id": 7884,
                  "description": "B-GO2879",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/7884",
                  "location": {
                    "latitude": 52.4701,
                    "longitude": 13.42044,
                    "system": "WGS_84"
                  },
                  "provider": "car2Go",
                  "availability": 100,
                  "operator": "Car2Go_Berlin"
                },
                {
                  "actions": [
                    {
                      "name": "book",
                      "method": "POST",
                      "uri": "Resources/CarSharing/Cars/7885/Process?action=book"
                    }
                  ],
                  "id": 7885,
                  "description": "B-GO2653",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/7885",
                  "location": {
                    "latitude": 52.52848,
                    "longitude": 13.19156,
                    "system": "WGS_84"
                  },
                  "provider": "car2Go",
                  "availability": 100,
                  "operator": "Car2Go_Berlin"
                },
                {
                  "actions": [
                    {
                      "name": "book",
                      "method": "POST",
                      "uri": "Resources/CarSharing/Cars/8816/Process?action=book"
                    }
                  ],
                  "id": 8816,
                  "description": "Romeo",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/8816",
                  "location": {
                    "latitude": 52.513024,
                    "longitude": 13.327073,
                    "system": "WGS_84"
                  },
                  "provider": "driveNow",
                  "availability": 100,
                  "operator": "DriveNow"
                },
                {
                  "actions": [
                    {
                      "name": "book",
                      "method": "POST",
                      "uri": "Resources/CarSharing/Cars/8817/Process?action=book"
                    }
                  ],
                  "id": 8817,
                  "description": "Kingsley",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/8817",
                  "location": {
                    "latitude": 52.500411,
                    "longitude": 13.374263,
                    "system": "WGS_84"
                  },
                  "provider": "driveNow",
                  "availability": 100,
                  "operator": "DriveNow"
                },
                {
                  "actions": [
                    {
                      "name": "book",
                      "method": "POST",
                      "uri": "Resources/CarSharing/Cars/8818/Process?action=book"
                    }
                  ],
                  "id": 8818,
                  "description": "Inness",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/8818",
                  "location": {
                    "latitude": 52.502916,
                    "longitude": 13.479554,
                    "system": "WGS_84"
                  },
                  "provider": "driveNow",
                  "availability": 100,
                  "operator": "DriveNow"
                },
                {
                  "actions": [
                    
                  ],
                  "id": 9323,
                  "description": "B-CC 4162",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/9323",
                  "location": {
                    "latitude": 52.50404000000001,
                    "longitude": 13.47005,
                    "system": "WGS_84"
                  },
                  "provider": "citeeCar",
                  "availability": null,
                  "operator": "CiteeCar"
                },
                {
                  "actions": [
                    
                  ],
                  "id": 9324,
                  "description": "B-CC 1541",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/9324",
                  "location": {
                    "latitude": 52.565338134765625,
                    "longitude": 13.420881271362305,
                    "system": "WGS_84"
                  },
                  "provider": "citeeCar",
                  "availability": null,
                  "operator": "CiteeCar"
                },
                {
                  "actions": [
                    
                  ],
                  "id": 9325,
                  "description": "B-CC 3392",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/9325",
                  "location": {
                    "latitude": 52.521278381347656,
                    "longitude": 13.419211387634277,
                    "system": "WGS_84"
                  },
                  "provider": "citeeCar",
                  "availability": null,
                  "operator": "CiteeCar"
                },
                {
                  "actions": [
                    
                  ],
                  "id": 9467,
                  "description": "151601",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/9467",
                  "location": {
                    "latitude": 52.5275867,
                    "longitude": 13.4586233,
                    "system": "WGS_84"
                  },
                  "provider": "multiCity",
                  "availability": 100,
                  "operator": "Multicity"
                },
                {
                  "actions": [
                    
                  ],
                  "id": 9468,
                  "description": "150554",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/9468",
                  "location": {
                    "latitude": 52.5312183,
                    "longitude": 13.3188283,
                    "system": "WGS_84"
                  },
                  "provider": "multiCity",
                  "availability": 100,
                  "operator": "Multicity"
                },
                {
                  "actions": [
                    
                  ],
                  "id": 9469,
                  "description": "114075",
                  "type": "Cars",
                  "uri": "Resources/CarSharing/Cars/9469",
                  "location": {
                    "latitude": 52.4811767,
                    "longitude": 13.3154033,
                    "system": "WGS_84"
                  },
                  "provider": "multiCity",
                  "availability": 100,
                  "operator": "Multicity"
                }
              ]
            }

## List of free-floating Cars with Basic Info [/imp-endpoint/api/V1/Resources/CarSharing/Cars?lat={lat}&lng={lng}&radius={radius}&f_cars={fuelTypeJson}]

This collection contains a list of available free-floating cars in a specific area specified by query parameters (for free-floating car sharing only!).
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The optional filter `f_cars` can be used to get cars with a specific `fuelType`

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time. Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources
--- | --- | ---
actions | Array | 
id | Number | car id
description | String | License ID or approximate location
type | String | "CarSharingCarDetails"
uri | URI | URI
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider | String | 
availability | Double | Svailability in percentage
operator | String | "Car2Go_Berlin" etc.
model | String | 
address | String | Street, city, etc.
licenseId | String | License ID
category | String | ENUM{"Fullsize", "Compact", "Smallsize", ... }
fuelType | String | electric vehicle ("ELECTRICITY") or petrol car ("PETROL")
fuelLevel | Double | Fuel level in percentage
imageLink | Link | link to the car image
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request


### Getting free-floating Cars [GET] 
@testable

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `3000`) ... radius value. Has example value.
    + fuelTypeJson (optional, string, `{"fuelType":"ELECTRICITY"}`) ... String `fuelTypeJson` fuel type json data. Example value `{"fuelType":"ELECTRICITY"}` or `{"fuelType":"PETROL"}`

+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT     
        
        
+ Response 200 (application/json)

    + Body
    
            {
            "metaData": [
                {
                    "serviceAlias": "driveNow",
                    "lastUpdateTime": "2014-07-09T12:36:24+0200",
                    "messages": []
                },
                {
                    "serviceAlias": "car2Go",
                    "lastUpdateTime": "2014-07-09T12:41:23+0200",
                    "messages": []
                },
                {
                    "serviceAlias": "flinkster",
                    "lastUpdateTime": "2014-07-09T12:41:25+0200",
                    "messages": []
                },
                {
                    "serviceAlias": "citeeCar",
                    "lastUpdateTime": "2014-07-09T12:26:09+0200",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [
                        {
                            "name": "book",
                            "method": "POST",
                            "uri": "Resources/CarSharing/Cars/235787/Process?action=book"
                        }
                    ],
                    "id": 235787,
                    "description": "Philbert",
                    "type": "CarSharingCar",
                    "uri": "Resources/CarSharing/Cars/235787",
                    "location": {
                        "latitude": 52.520018,
                        "longitude": 13.390876,
                        "system": "WGS_84"
                    },
                    "provider": "driveNow",
                    "availability": 100,
                    "operator": "DriveNow",
                    "modFlag": "Relocated",
                    "model": "MINI Cabrio",
                    "address": null,
                    "licenseId": "M-DX7999",
                    "category": null,
                    "fuelType": "PETROL",
                    "fuelLevel": null,
                    "imageLink": null
                },
                {
                    "actions": [
                        {
                            "name": "book",
                            "method": "POST",
                            "uri": "Resources/CarSharing/Cars/235788/Process?action=book"
                        }
                    ],
                    "id": 235788,
                    "description": "Chico",
                    "type": "CarSharingCar",
                    "uri": "Resources/CarSharing/Cars/235788",
                    "location": {
                        "latitude": 52.513842,
                        "longitude": 13.385001,
                        "system": "WGS_84"
                    },
                    "provider": "driveNow",
                    "availability": 100,
                    "operator": "DriveNow",
                    "modFlag": "Deleted",
                    "model": "BMW X1",
                    "address": null,
                    "licenseId": "M-DX7124",
                    "category": null,
                    "fuelType": "DIESEL",
                    "fuelLevel": null,
                    "imageLink": null
                }
                ]
            }
        

## List of Stations with Basic Info [/imp-endpoint/api/V1/Resources/CarSharing/Stations?lat={lat}&lng={lng}&radius={radius}&f_cars={fuelTypeJson}&operatorId={operatorId}]

This collection contains a list of car sharing stations in a specific area (for station-based car sharing) specified by the query parameters,
together with basic information and URI to acquire more details.
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The optional filter `f_cars` can be used to get cars with a specific `fuelType`

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time. Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | 
id | Number | 
description | String | Approximate location
type | String | 
uri | URI | URI to request more details
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider | String | 
availability | Double | Availability in percentage
operator | String | 
operatorURI | String | 
operatorName | String | 
address | Object | {"cityCode": String, "city": String, "street": String, "houseNo": String, "district": String, "region": String, "country": String}
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request 


### Getting car sharing station list [GET] 
@testable

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `3000`) ... radius value. Has example value.
    + fuelTypeJson (optional, string, `{"fuelType":"ELECTRICITY"}`) ... String `fuelTypeJson` fuel type json data. Example value `{"fuelType":"ELECTRICITY"}` or `{"fuelType":"PETROL"}`
    + operatorId (optional, string, `FlinksterDB`) ... String `operatorId` operator id data. Has example value.

+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)
            
    + Body
    
            {
            "metaData": [
                {
                    "serviceAlias": "driveNow",
                    "lastUpdateTime": "2014-07-09T12:56:21+0200",
                    "messages": []
                },
                {
                    "serviceAlias": "car2Go",
                    "lastUpdateTime": "2014-07-09T13:01:24+0200",
                    "messages": []
                },
                {
                    "serviceAlias": "flinkster",
                    "lastUpdateTime": "2014-07-09T12:41:25+0200",
                    "messages": []
                },
                {
                    "serviceAlias": "citeeCar",
                    "lastUpdateTime": "2014-07-09T12:26:09+0200",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [
                        {
                            "name": "book",
                            "method": "POST",
                            "uri": "Resources/CarSharing/Stations/236082/Process?action=book"
                        }
                    ],
                    "id": 236082,
                    "description": "Handwerkervereinshaus / Sophienstraße",
                    "type": "CarSharingStation",
                    "uri": "Resources/CarSharing/Stations/236082",
                    "location": {
                        "latitude": 52.52561167074207,
                        "longitude": 13.401126265525818,
                        "system": "WGS_84"
                    },
                    "provider": "flinkster",
                    "availability": 100,
                    "operator": "FlinksterDB",
                    "modFlag": "Modified",
                    "phoneNo": null,
                    "operatorURI": null,
                    "operatorName": "FlinksterDB",
                    "address": {
                        "citycode": "10178",
                        "city": "Berlin",
                        "street": "Sophienstraße",
                        "houseno": "18",
                        "district": "Mitte",
                        "region": null,
                        "country": null
                    }
                },
                {
                    "actions": [
                        {
                            "name": "book",
                            "method": "POST",
                            "uri": "Resources/CarSharing/Stations/236084/Process?action=book"
                        }
                    ],
                    "id": 236084,
                    "description": "Caroline-Michaelis-Straße",
                    "type": "CarSharingStation",
                    "uri": "Resources/CarSharing/Stations/236084",
                    "location": {
                        "latitude": 52.533559809882156,
                        "longitude": 13.382519781589508,
                        "system": "WGS_84"
                    },
                    "provider": "flinkster",
                    "availability": 100,
                    "operator": "FlinksterDB",
                    "modFlag": "Modified",
                    "phoneNo": null,
                    "operatorURI": null,
                    "operatorName": "FlinksterDB",
                    "address": {
                        "citycode": "10115",
                        "city": "Berlin",
                        "street": "Caroline-Michaelis-Straße",
                        "houseno": "5-11",
                        "district": "Mitte",
                        "region": null,
                        "country": null
                    }
                }
                ]
            }  

# Group EV Charging
This is a group of all EV Charging related rest resources    
    

## List of EV Charging Stations with Basic Info [/imp-endpoint/api/V1/Resources/EVCharging/Stations?lat={lat}&lng={lng}&radius={radius}]
This collection contains a list of all electric vehicle (EV) charging stations in an area of interest specified by query parameters, 
together with geo location, name, and a URI to acquire more details.
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource
id | Number | Internal charging station identification numberg
description | String | Approximate location or parking garage operator
type | String | ="EVChargingStation" 
uri | URI | URI to request more details
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider |  String| Charging station operator (usually equals provider)
availability | Double | Availability in percentage
operator | String | Charging station provider (usually equals operator)
address | Object | 
plugTypes | Enum value | Type of the plug.
power | Number |  
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request  


### Getting EV charging stations [GET]
@testable

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `1000`) ... longitude value. Has example value.
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)
    
        {
            "metaData": [
                {
                    "serviceAlias": "vattenfall",
                    "lastUpdateTime": "2014-07-10T12:06:09+0200",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [],
                    "id": 268355,
                    "description": "Conti",
                    "type": "EVChargingStation",
                    "uri": "Resources/EVCharging/Stations/268355",
                    "location": {
                        "latitude": 52.51474,
                        "longitude": 13.38639,
                        "system": "WGS_84"
                    },
                    "provider": "vattenfall",
                    "availability": 0,
                    "operator": "Vattenfall",
                    "modFlag": "Relocated",
                    "address": {
                        "citycode": "10117",
                        "city": "Berlin",
                        "street": "Glinkastr.",
                        "houseno": "38",
                        "district": null,
                        "region": null,
                        "country": null
                    },
                    "plugTypes": [
                        "Type2Outlet",
                        "TypeFSchuko"
                    ],
                    "power": {
                        "unit": "KiloWatt",
                        "value": 11040
                    }
                }
            ]
        }

## List of All EV Charging Stations with Basic Info [/imp-endpoint/api/V1/Resources/EVCharging/Stations/All]
This collection contains a list of all electric vehicle (EV) charging stations.

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource
id | Number | Internal charging station identification numberg
description | String | Approximate location or parking garage operator
type | String | ="EVChargingStation" 
uri | URI | URI to request more details
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider |  String| Charging station operator (usually equals provider)
availability | Double | Availability in percentage
operator | String | Charging station provider (usually equals operator)
address | Object | 
plugTypes | Enum value | Type of the plug.
power | Number |  
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request  


### Getting EV charging stations [GET]
@testable

+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)
    
        {
            "metaData": [
                {
                    "serviceAlias": "vattenfall",
                    "lastUpdateTime": "2014-08-11T14:54:39+0200",
                    "messages": []
                },
                {
                    "serviceAlias": "hubject",
                    "lastUpdateTime": "2014-08-11T05:17:50+0200",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [],
                    "id": 53009,
                    "description": "",
                    "type": "EVChargingStationDetails",
                    "uri": "Resources/EVCharging/Stations/EVChargingStationDetails/53009",
                    "location": {
                        "latitude": 52.43498,
                        "longitude": 13.43448,
                        "system": "WGS_84"
                    },
                    "provider": "vattenfall",
                    "availability": 100,
                    "operator": "Vattenfall"
                },
                {
                    "actions": [],
                    "id": 49313,
                    "description": "TOTAL-Tankstelle",
                    "type": "EVChargingStationDetails",
                    "uri": "Resources/EVCharging/Stations/EVChargingStationDetails/49313",
                    "location": {
                        "latitude": 52.5481579,
                        "longitude": 13.4675685,
                        "system": "WGS_84"
                    },
                    "provider": "vattenfall",
                    "availability": 100,
                    "operator": "Vattenfall"
                }
            ]
        }

# Group Parking
This is a group of all parking related rest resources. Parking Garages & On-street Paring Vacancies
    

## Parking Garages with Basic Info [/imp-endpoint/api/V1/Resources/Parking/Garages?lat={lat}&lng={lng}&radius={radius}]    
This collection contains a list of all parking garages in an area of interest specified by query parameters together with an URI to acquire more details. 
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource (book, cancel, etc.)
id | Number | Internal parking garage identification number
description | String | Approximate location
type | String | (="ParkingGarage")
uri | URI | URI to request more details
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  } 
provider | String | Parking service provider (usually equals operator)
availability | Double | Availability in percentage
operator | String | Parking space operator (usually equals provider)
totalnumber | Object | Number of lots for different categories { "handicappedOnly":Int, "womenOnly":Int, "others":Int }
lottype | Enum | Type of garage {"Parkhaus", "Parkzone", "Tiefgarage", "Parkplatz"} 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Sinceodified-Since header is passed in the request 

Parts of the data structure might be omitted if the information is not available. 
    

### Getting parking garages [GET]
@testable

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `1000`) ... longitude value. Has example value.
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)   

        {
            "metaData": [
                {
                    "serviceAlias": "vmzParking",
                    "lastUpdateTime": "2014-07-10T11:11:04+0200",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/270113/Process?action=consume"
                        }
                    ],
                    "id": 270113,
                    "description": "Mitte, Parkhaus Dorotheenstraße",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/270113",
                    "location": {
                        "latitude": 52.51908,
                        "longitude": 13.39094,
                        "system": "WGS_84"
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "Parkinglot",
                    "totalnumber": {
                        "others": 495,
                        "handicappedOnly": 0,
                        "womenOnly": 0
                    },
                    "lottype": "Tiefgarage"
                },
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/270134/Process?action=consume"
                        }
                    ],
                    "id": 270134,
                    "description": "Mitte, An der Friedrichswerderschen Kirche",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/270134",
                    "location": {
                        "latitude": 52.515930000000004,
                        "longitude": 13.39694,
                        "system": "WGS_84"
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "Parkinglot",
                    "totalnumber": {
                        "others": 75,
                        "handicappedOnly": 0,
                        "womenOnly": 0
                    },
                    "lottype": "Parkplatz"
                }
            ]
        }
        

## All Parking Garages with Basic Info [/imp-endpoint/api/V1/Resources/Parking/Garages/All]    
This collection contains a list of all parking garages. 

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource (book, cancel, etc.)
id | Number | Internal parking garage identification number
description | String | Approximate location
type | String | (="ParkingGarage")
uri | URI | URI to request more details
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  } 
provider | String | Parking service provider (usually equals operator)
availability | Double | Availability in percentage
operator | String | Parking space operator (usually equals provider)
totalnumber | Object | Number of lots for different categories { "handicappedOnly":Int, "womenOnly":Int, "others":Int }
lottype | Enum | Type of garage {"Parkhaus", "Parkzone", "Tiefgarage", "Parkplatz"} 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Sinceodified-Since header is passed in the request 

Parts of the data structure might be omitted if the information is not available. 
    

### Getting parking garages [GET]
@testable

+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)   

        {
            "metaData": [
                {
                    "serviceAlias": "vmzParking",
                    "lastUpdateTime": "2014-08-11T14:59:21+0200",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/ParkingGarage/50534/Process?action=consume"
                        }
                    ],
                    "id": 50534,
                    "description": "P+R Königs Wusterhausen DB (S)",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/ParkingGarage/50534",
                    "location": {
                        "latitude": 52.2980346679688,
                        "longitude": 13.6327829360962,
                        "system": "WGS_84"
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "PR"
                },
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/ParkingGarage/49527/Process?action=consume"
                        }
                    ],
                    "id": 49527,
                    "description": "Mitte, Hotel Hilton Kronenstraße",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/ParkingGarage/49527",
                    "location": {
                        "latitude": 52.51183,
                        "longitude": 13.391890000000002,
                        "system": "WGS_84"
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "Parkinglot"
                }
            ]
        }
        

# Group Public Transport
This is a group of all public transportation related rest resources.


## List of Public Transport Stations with Basic Info [/imp-endpoint/api/V1/Resources/PublicTransport/Stations?lat={lat}&lng={lng}&radius={radius}&f_stations={f_stations}] 

This collection contains list stations (U-Bahn/S-Bahn/train/bus/tram) in a specific area with basic information and a URI to get more details.
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The optional filter `f_stations` can be used to get the stations with a particular   `stationType`

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time. Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
description | String | Approximate location
type | String | (="PublicTransportStation")
uri | URI | URI to request more details
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider | String | Bus/tram (="VBBStation"), metro (="VBBStationU"), S-Bahn (="VBBStationS")
availability | Double | Availability in percentage
operator | String | Bus/tram (="VBBStation"), metro (="VBBStationU"), S-Bahn (="VBBStationS")
stationType | String | BusTramStation, MetroStation, CityTrainStation
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request 


+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `1000`) ... radius value. Has example value.
    + f_stations (optional, string, `{"stationType":"BusTramStation"}`) ... String `f_stations` filter value. Has example value.
+ Model (application/json)

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "vmzStation",
                        "lastUpdateTime": "2014-07-11T12:08:22+0200",
                        "messages": []
                    }
                ],
                "resources": [
                    {
                        "actions": [],
                        "id": 306016,
                        "description": "Berlin, Jüdisches Museum",
                        "type": "PublicTransportStation",
                        "uri": "Resources/PublicTransport/Stations/306016",
                        "location": {
                            "latitude": 52.503543,
                            "longitude": 13.395639,
                            "system": "WGS_84"
                        },
                        "provider": "vmzStation",
                        "availability": 100,
                        "operator": "VBBStation",
                        "stationType":"BusTramStation",
                        "modFlag": "Relocated"
                    },
                    {
                        "actions": [],
                        "id": 306017,
                        "description": "Berlin, Kommandantenstr.",
                        "type": "PublicTransportStation",
                        "uri": "Resources/PublicTransport/Stations/306017",
                        "location": {
                            "latitude": 52.507675,
                            "longitude": 13.40418,
                            "system": "WGS_84"
                        },
                        "provider": "vmzStation",
                        "availability": 100,
                        "operator": "VBBStation",
                        "stationType":"BusTramStation",
                        "modFlag": "Relocated"
                    }
                ]
            }



### Getting all stations in a specific area [GET]
@testable

+ Request

    + Headers
        
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT

+ Response 200

    [List of Public Transport Stations with Basic Info][]
    
    

## List of All Public Transport Stations with Basic Info [/imp-endpoint/api/V1/Resources/PublicTransport/Stations/All] 

This collection contains list stations (U-Bahn/S-Bahn/train/bus/tram)

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time. Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
description | String | Approximate location
type | String | (="PublicTransportStation")
uri | URI | URI to request more details
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider | String | Bus/tram (="VBBStation"), metro (="VBBStationU"), S-Bahn (="VBBStationS")
availability | Double | Availability in percentage
operator | String | Bus/tram (="VBBStation"), metro (="VBBStationU"), S-Bahn (="VBBStationS")
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request 

+ Model (application/json)

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "vmzStation",
                        "lastUpdateTime": "2014-10-14T07:48:27+0200",
                        "messages": []
                    }
                ],
                "resources": [
                    {
                        "actions": [],
                        "id": 52696,
                        "description": "Berlin, Wiebestr./Huttenstr.",
                        "type": "PublicTransportStation",
                        "uri": "Resources/PublicTransport/Stations/PublicTransportStation/52696",
                        "location": {
                            "latitude": 52.528315,
                            "longitude": 13.320255,
                            "system": "WGS_84"
                        },
                        "provider": "vmzStation",
                        "availability": 100,
                        "operator": "VBBStation",
                        "modFlag": "Modified"
                    },
                    {
                        "actions": [],
                        "id": 51655,
                        "description": "Berlin, Waltersdorfer Str./Krumme Str.",
                        "type": "PublicTransportStation",
                        "uri": "Resources/PublicTransport/Stations/PublicTransportStation/51655",
                        "location": {
                            "latitude": 52.398914,
                            "longitude": 13.574981,
                            "system": "WGS_84"
                        },
                        "provider": "vmzStation",
                        "availability": 100,
                        "operator": "VBBStation",
                        "modFlag": "Modified"
                    }
                ]
            }



### Getting all stations [GET]
@testable

+ Request

    + Headers
        
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT

+ Response 200

            {
                        "metaData": [
                            {
                                "serviceAlias": "vmzStation",
                                "lastUpdateTime": "2014-10-14T07:48:27+0200",
                                "messages": []
                            }
                        ],
                        "resources": [
                            {
                                "actions": [],
                                "id": 52696,
                                "description": "Berlin, Wiebestr./Huttenstr.",
                                "type": "PublicTransportStation",
                                "uri": "Resources/PublicTransport/Stations/PublicTransportStation/52696",
                                "location": {
                                    "latitude": 52.528315,
                                    "longitude": 13.320255,
                                    "system": "WGS_84"
                                },
                                "provider": "vmzStation",
                                "availability": 100,
                                "operator": "VBBStation",
                                "modFlag": "Modified"
                            },
                            {
                                "actions": [],
                                "id": 51655,
                                "description": "Berlin, Waltersdorfer Str./Krumme Str.",
                                "type": "PublicTransportStation",
                                "uri": "Resources/PublicTransport/Stations/PublicTransportStation/51655",
                                "location": {
                                    "latitude": 52.398914,
                                    "longitude": 13.574981,
                                    "system": "WGS_84"
                                },
                                "provider": "vmzStation",
                                "availability": 100,
                                "operator": "VBBStation",
                                "modFlag": "Modified"
                            }
                        ]
                    }

# Group Taxi Service
This is a group of all taxi related rest resources.


## List of available Taxis with Basic Info [/imp-endpoint/api/V1/Resources/TaxiService/Taxis?lat={lat}&lng={lng}&radius={radius}] 

This collection contains list of taxis in a specific area with basic information and a URI to get more details.
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time. Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT


### Get taxis in a specific area [GET]
@testable

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `1000`) ... radius value. Has example value.
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 

+ Response 200 (application/json)

        {
            "metaData": [
                {
                  "serviceAlias": "bettertaxi",
                  "lastUpdateTime": null,
                  "messages": []
                }
            ],
              "resources": []
        }

## List of All available Taxis with Basic Info [/imp-endpoint/api/V1/Resources/TaxiService/Taxis/All] 

This collection contains list of taxis.

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time. Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT


### Get taxis in a specific area [GET]
@testable

+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 

+ Response 200 (application/json)

        {
            "metaData": [
                {
                  "serviceAlias": "bettertaxi",
                  "lastUpdateTime": null,
                  "messages": []
                }
            ],
              "resources": []
        }        
        

# Group Journey Planner. IMR
This is a group of all IMR journey planner related rest resources.


## List of Trip Proposals with Basic Info. Intermodal Router [/imp-endpoint/api/V1/TripProposals/IMR] 

This collection contains a list of trip proposals with basic information for specified trip criteria. Note: the trip proposals can be multimodal or intermodal, depending on which routing service the user is subscribed to.

The data structure of collection contains a list of trip proposals. Each trip proposal contains the following attributes:

attribute | json data type | comments
--- | --- | ---
url | URI | URI to request more details
origin | Object | start point of the proposed trip
destination | Object | endpoint of the proposed trip
trafficTypes | Array | list of traffic types used in the proposed trip. Possible values: Bike, Bus, Car, CityTrain, Ferry, Metro, Other, RegioTrain, Unknown, Train, Tram, Walk, UBahn. trafficType Other is used in the segments for car rental/parking
description | String | description of the trip proposal
costs | Array | list of costs for the proposed trip including distance, duration, price, etc.

    
+ Model (application/json)

    + Body
    
            [
                {
                    "url": "TripProposals/IMR/67884",
                    "origin": {
                        "location": {
                            "latitude": 52.3934913,
                            "longitude": 13.0744278,
                            "system": "WGS_84"
                        },
                        "address": "Humboldtring 10, 14473 Potsdam, Germany",
                        "time": "2014-08-27T11:23:06+0200"
                    },
                    "destination": {
                        "location": {
                            "latitude": 52.5258182,
                            "longitude": 13.369545,
                            "system": "WGS_84"
                        },
                        "address": "Europa Square 1, 10557 Berlin, Germany",
                        "time": "2014-08-27T13:03:07+0200"
                    },
                    "trafficTypes": [
                        "Walk",
                        "Other",
                        "Bike"
                    ],
                    "description": null,
                    "costs": {
                        "distance": {
                            "unit": "Meter",
                            "value": 28537.5323005797
                        },
                        "duration": {
                            "unit": "Minute",
                            "value": 100.01666666666667
                        },
                        "price": {
                            "unit": "Euro",
                            "value": 0.1
                        },
                        "emission": {
                            "unit": "Gram",
                            "value": 0
                        },
                        "ticketPrice": null
                    }
                },
                {
                    "url": "TripProposals/IMR/67885",
                    "origin": {
                        "location": {
                            "latitude": 52.3934913,
                            "longitude": 13.0744278,
                            "system": "WGS_84"
                        },
                        "address": "Humboldtring 10, 14473 Potsdam, Germany",
                        "time": "2014-08-27T11:23:06+0200"
                    },
                    "destination": {
                        "location": {
                            "latitude": 52.5258182,
                            "longitude": 13.369545,
                            "system": "WGS_84"
                        },
                        "address": "Europa Square 1, 10557 Berlin, Germany",
                        "time": "2014-08-27T13:11:13+0200"
                    },
                    "trafficTypes": [
                        "Walk",
                        "Other",
                        "Bike"
                    ],
                    "description": null,
                    "costs": {
                        "distance": {
                            "unit": "Meter",
                            "value": 29568.7704083448
                        },
                        "duration": {
                            "unit": "Minute",
                            "value": 108.11666666666666
                        },
                        "price": {
                            "unit": "Euro",
                            "value": 0.1
                        },
                        "emission": {
                            "unit": "Gram",
                            "value": 0
                        },
                        "ticketPrice": null
                    }
                }
            ]



### Getting Trip Proposals by IMR Planner  [POST]
@testable

Selection criteria for trip proposals is specified in the request body as described in the sample request with the following attributes:

attribute | json data type | comments
--- | --- | ---
origin | Object | start point specified by a geo location (optionally can also include starttime). (addresses can be converted into geo locations by means of "GET /Resources/GeoLocations")
destination | Object | end point specified by a geo location (optional can also include endtime). Note if time in the origin is specified, time in the destination is discarded! If no time is specified current time is taken.
viapoints | Array of Objects | list of geolocations the route should pass
costfunctions | Array of Objects | list of cost factors, (such as Distance, Duration, Price, Emission), each with a percentual weight. Sample custfunction: {"costType":"Duration","percentage":"100"}
ownVehicles | Array of Objects | list of own vehicles which should be included into trip proposal calculation. Sample object value {"trafficType":"Car", "useParking":true,"useParkAndRide":false, "location":{"longitude":13.064472900000055,"latitude":52.3905689,"system":"WGS84"}}
userId | String | traveller id that requests a trip. Note: currently not used by IMP and can be any string
trafficTypes | Array | list of traffic types wich should be included into trip proposal calculation. Currently possible: Bike, Bus, Car, CityTrain, Ferry, Metro, Other, RegioTrain, Unknown, Train, Tram, Walk, UBahn. trafficType Other is used in the segments for car rental/parking
routingConstraints | Array of Objects | list of constraints to be taken into account for various traffic types, specified by min/max values. E.q. maximal distance in meters the traveller agrees to walk: {"routingConstraintType": "Distance", "trafficType": "Walk", "min": { "value": 0,"unit": "Meter" }, "max":{"value":600, "unit":"Meter"}}
useBikeSharing | Boolean | use bike sharing services for routing [default: false]
useCarSharing | Boolean | use car sharing services for routing [default: false]

Notes:
- IMR also provides routes in the past, but not for public transport
- route calculation the IMR takes into account information about current traffic situation (traffic jams/road works/...)
- Traveling time costs for proposed journeys include the following extra time: 2 minutes set-up time and 1 minute return time for free-floating car sharing and bike sharing; 2 minutes set-up time and 0 minutes return time for station-based car and bike sharing, 5 minutes parking time for free-floating car sharing and own car




+ Request

    + Headers
    
            Content-Type: application/json
            Accept: application/json

    + Body
        
            {
              "origin": {
                "location": {
                  "system": "WGS84",
                  "longitude": 13.074760101735592,
                  "latitude": 52.3933000574258
                },
                "time": "2014-08-27T14:53:06+0530"
              },
              "destination": {
                "location": {
                  "system": "WGS84",
                  "longitude": 13.369544930756092,
                  "latitude": 52.52559208824942
                },
                "time": null
              },
              "viaPoints": [],
              "costFunctions": [
                {
                  "percentage": 100,
                  "costType": "Duration"
                }
              ],
              "userId": "4711/10",
              "trafficTypes": [
                "Walk",
                "Bike",
                "Car",
                "Metro",
                "CityTrain",
                "Bus"
              ],
              "routingConstraints": [
                {
                  "routingConstraintType": "Distance",
                  "trafficType": "Walk",
                  "max": {
                    "value": "1000",
                    "unit": "Meter"
                  }
                },
                {
                  "routingConstraintType": "Distance",
                  "trafficType": "Car",
                  "max": {
                    "value": "20000",
                    "unit": "Meter"
                  }
                }
             ],
             "useBikeSharing": "true",
             "useCarSharing": "true", 
             "ownVehicles":[
                            {  "trafficType":"Car",
                                "useParking":"true",
                                "useParkAndRide":"true"
                            }
                        ]
            }

+ Response 200

    [List of Trip Proposals with Basic Info. Intermodal Router][]


# Group Journey Planner. Car Router
This is a group of all journey planner Car Router related rest resources.
            

## List of Trip Proposals with Basic Info. Car Journey Planner [/imp-endpoint/api/V1/TripProposals/CarRouter] 

This collection contains trip proposals with basic information for specified trip criteria.
The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
url | URI | URI to request more details
origin | Object | start point of the proposed trip
destination | Object | endpoint of the proposed trip
trafficTypes | Array | list of traffic types used in the proposed trip. Currently: Bike, Bus, Car, CityTrain, Ferry, Metro, Other, RegioTrain, Unknown, Train, Tram, Walk, UBahn. trafficType Other is used in the segments for car rental/parking  
description | String | 
costs | Array | list of costs for the proposed trip
useBikeSharing | Boolean | use bike sharing services for routing [default: false]
useCarSharing | Boolean | use car sharing services for routing [default: false]
--- | --- | ---
ownVehicles | Object | 
--- | --- | ---
trafficType | Enum | Own vehicle type - Car / Bike
useParking | Boolean | Use parking for own vehicle 
useParkAndRide | Boolean | Use parking and ride for own vehicle 

    
+ Model (application/json)

    + Body
    
            [
                {
                    "url": "TripProposals/CarRouter/80844",
                    "origin": {
                        "location": {
                            "latitude": 52.39419937133789,
                            "longitude": 13.07367992401123,
                            "system": "WGS_84"
                        },
                        "address": null,
                        "time": "2014-03-27T13:04:40+0100"
                    },
                    "destination": {
                        "location": {
                            "latitude": 52.563589,
                            "longitude": 13.319065,
                            "system": "WGS_84"
                        },
                        "address": null,
                        "time": "2014-03-27T14:48:09+0100"
                    },
                    "trafficTypes": [
                        "Car"
                    ],
                    "description": null,
                    "costs": {
                        "distance": null,
                        "duration": {
                            "unit": "Second",
                            "value": 5947.563361271776
                        },
                        "price": null,
                        "emission": null,
                        "ticketPrice": null
                    }
                }
            ]



### Getting Trip Proposals by Car Journey Planner [POST]
@testable

Selection criteria is specified in the request body as described in the sample request:
origin: start point specified by a geo location (addresses can be converted into geo locations by means of "GET /Resources/GeoLocations")
destination: start point specified by a geo location
either orgin or destination might specify a time
viaPoints: list of geo locations that the route should use
costFunction: list of cost factors (such as Distance, Duration, Price, Emission), each with a percentual weight 
routingConstraints: list of constraints to be taken into account for various traffic types, specified by min/max values
userId: user that requests a trip

+ Request

    + Headers
    
            Content-Type: application/json
            Accept: application/json

    + Body
        
            {
                  "origin": {
                    "location": {
                      "longitude": 13.072690999999963,
                      "latitude": 52.3941887,
                      "system": "WGS84"
                    },
                    "time": "2014-03-27T12:04:02UTC+05:30"
                  },
                  "destination": {
                    "location": {
                      "longitude": 13.319420000000036,
                      "latitude": 52.56347100000001,
                      "system": "WGS84"
                    },
                    "time": null
                  },
                  "viaPoints": [],
                  "costFunctions": [],
                  "userId": "4711/10",
                  "routingConstraints": []
            }

+ Response 200 

    [List of Trip Proposals with Basic Info. Car Journey Planner][]          

# Group Incidents / Traffic Info
This is a group of all incidents related rest resources.


## List of Incidents [/imp-endpoint/api/V1/Info/Incidents?lat={lat}&lng={lng}&radius={radius}] 

This collection contains list of recent general incidents (incidents that affect public AND individual transport) in a specific area of interest with an URI to get more details.
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
category | Enum | {"Roadworks", "Blockade", "Indefinition"} are the categories for the incidents with type "IncidentIndividualTransport", {"ConstructionProject", "Imbalance", "Diversion", "RailReplacement", "ShuttleService"} are the categories for incidents with type "IncidentPublicTransport"
message | String | 
timePeriod | Object | time period of the incident
coordinates | Object | coordinates of the incident
reason | String | reason description
reasonShort | String | reason description
consequence | String | consequense description
consequenceShort | String | consequense description
location | String | location as String
source | String | {= "PT", "INKO", etc.}
affectedTrips | Array | list of affected trips
net | NetType  | 
description | String | description of an incident information
type | String | There are 2 types of incidents: Incidents with the type "IncidentIndividualTransport" affect individual transport (car, bycicle), incidents with the type "IncidentPublicTransport" affect public transport (bus, tram, etc.)
uri | URI | URI
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider | Enum | {"News", etc.}


+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `2000`) ... radius value. Has example value.
    
+ Model (application/json)

    + Body
    
            [
                {
                    "category": "Blockade",
                    "message": "Closed Road",
                    "timePeriod": {
                        "from": "2012-11-09T12:00:00+0100",
                        "to": "2014-08-31T17:00:59+0200"
                    },
                    "reason": null,
                    "reasonShort": null,
                    "consequence": null,
                    "consequenceShort": null,
                    "location": {
                        "latitude": 52.51774,
                        "longitude": 13.38868,
                        "system": "WGS_84"
                    },
                    "source": "INKO",
                    "affectedTrips": null,
                    "net": [],
                    "description": "Roadworks carriageway reduced from 2 to 1 lane traffic, congestion has to be expected road closed direction closed",
                    "type": "IndividualTransport",
                    "uri": null,
                    "provider": "vmz_trafficinfo",
                    "operator": "News",
                    "externalResourceId": "INKO_113388"
                },
                {
                    "category": "Roadworks",
                    "message": "Road Work",
                    "timePeriod": {
                        "from": "2012-04-11T09:00:00+0200",
                        "to": "2016-05-15T17:00:59+0200"
                    },
                    "reason": null,
                    "reasonShort": null,
                    "consequence": null,
                    "consequenceShort": null,
                    "location": {
                        "latitude": 52.51753,
                        "longitude": 13.39682,
                        "system": "WGS_84"
                    },
                    "source": "INKO",
                    "affectedTrips": null,
                    "net": [],
                    "description": "Roadworks, new road layout, carriageway reduced to one lane",
                    "type": "IndividualTransport",
                    "uri": null,
                    "provider": "vmz_trafficinfo",
                    "operator": "News",
                    "externalResourceId": "INKO_113041"
                }
            ]



### Getting all incidents [GET]
@testable

+ Response 200

    [List of Incidents][]
    

## List of All Incidents [/imp-endpoint/api/V1/Info/Incidents/All] 

This collection contains list of recent general incidents (incidents that affect public AND individual transport). 
The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
category | Enum | {"Roadworks", "Blockade", "Indefinition", "Congestion"} are the categories for the incidents with type "IncidentIndividualTransport", {"Construction", "Imbalance", "Diversion", "RailReplacement"} are the categories for incidents with type "IncidentPublicTransport"
message | String | 
timePeriod | Object | time period of the incident
coordinates | Object | coordinates of the incident
reason | String | reason description
reasonShort | String | reason description
consequence | String | consequense description
consequenceShort | String | consequense description
location | String | location as String
source | String | {= "PT", "INKO", etc.}
affectedTrips | Array | list of affected trips
net | NetType  | 
description | String | description of an incident information
type | String | There are 2 types of incidents: Incidents with the type "IncidentIndividualTransport" affect individual transport (car, bycicle), incidents with the type "IncidentPublicTransport" affect public transport (bus, tram, etc.)
uri | URI | URI
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  }
provider | Enum | {"News", etc.}



### Getting all incidents [GET]
@testable

+ Response 200

    [List of Incidents][]
    
    
    

## List of individual transport Incidents [/imp-endpoint/api/V1/Info/Incidents/IndividualTransport?lat={lat}&lng={lng}&radius={radius}] 

This collection contains list of recent incidents that affect individual transport only in a specific area of interest.
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The data structure contains the attributes as in *[/imp-endpoint/api/V1/Info/Incidents?lat={lat}&lng={lng}&radius={radius]* and additionally roadName attribute

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `2000`) ... radius value. Has example value.
    
+ Model

        [
            {
                "category": "Blockade",
                "message": "Closed Road",
                "timePeriod": {
                    "from": "2014-01-06T11:03:00+0100",
                    "to": "2014-12-31T23:59:00+0100"
                },
                "reason": null,
                "reasonShort": null,
                "consequence": null,
                "consequenceShort": null,
                "location": {
                    "latitude": 52.51680860970485,
                    "longitude": 13.385821218640254,
                    "system": "WGS_84"
                },
                "source": "Concert",
                "affectedTrips": null,
                "net": [],
                "description": "Roadworks, direction closed",
                "type": "IndividualTransport",
                "uri": null,
                "provider": "vmz_trafficinfo",
                "operator": "News",
                "externalResourceId": "2147338066",
                "roadName": "Unter den Linden (Mitte)"
            },
            {
                "category": "Roadworks",
                "message": "Road Work",
                "timePeriod": {
                    "from": "2012-04-11T09:00:00+0200",
                    "to": "2016-05-15T17:00:59+0200"
                },
                "reason": null,
                "reasonShort": null,
                "consequence": null,
                "consequenceShort": null,
                "location": {
                    "latitude": 52.51753,
                    "longitude": 13.39682,
                    "system": "WGS_84"
                },
                "source": "INKO",
                "affectedTrips": null,
                "net": [],
                "description": "Roadworks, new road layout, carriageway reduced to one lane",
                "type": "IndividualTransport",
                "uri": null,
                "provider": "vmz_trafficinfo",
                "operator": "News",
                "externalResourceId": "INKO_113041",
                "roadName": "Unter den Linden (Mitte)"
            }
        ]


### Getting recent general incidents that affect individual transport only in a specific area. [GET]
@testable

+ Response 200

    [List of individual transport Incidents][]


## List of public transport Incidents [/imp-endpoint/api/V1/Info/Incidents/PublicTransport?lat={lat}&lng={lng}&radius={radius}] 

This collection contains list of recent incidents that affect public transport only in a specific area.
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The data structure contains the attributes as in *[/imp-endpoint/api/V1/Info/Incidents?lat={lat}&lng={lng}&radius={radius]* and additionally information about line name, first and last stops and line direction

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `2000`) ... longitude value. Has example value.

+ Model (application/json)

    + Body
    
            [
                {
                    "category": "ConstructionProject",
                    "message": "Disruption",
                    "timePeriod": {
                        "from": "2013-08-26T01:00:00+0200",
                        "to": null
                    },
                    "reason": "Sperrung wegen Bauarbeiten der BVG",
                    "reasonShort": "Sperrung wegen Bauarbeiten der BVG",
                    "consequence": "Die Linie verkehrt nur zwischen Riesaer Str. und S Hackescher Markt. Die Haltestellen zwischen S Hackescher Markt und U Schwartzkopffstr. werden nicht bedient. Ein Ersatzverkehr mit Bussen ist nicht eingerichtet. Fahrempfehlung: Fahrgäste in Richtung U Schwartzkopffstr. nutzen zur Weiterfahrt bitte die Linien M1 bzw. 12 von der Haltestelle S Hackescher Markt in der Rosenthaler Str. bis U Oranienburger Tor bzw. die S-Bahn bis S+U Friedrichstr. und von dort die U6 in Richtung Alt-Tegel.",
                    "consequenceShort": "Bauarbeiten, Sperrung Streckenabschnitt lnvalidenstr./Chausseestr. &lt;&gt; U Schwartzkopffstr.",
                    "location": {
                        "latitude": 52.52165861111111,
                        "longitude": 13.40267888888889,
                        "system": "WGS_84"
                    },
                    "source": "PT",
                    "affectedTrips": null,
                    "net": [],
                    "description": "Baumaßnahme",
                    "type": "PublicTransport",
                    "uri": null,
                    "provider": "vmz_trafficinfo",
                    "operator": "News",
                    "externalResourceId": "BVG50554",
                    "direction": "Beide",
                    "firstStop": "S Hackescher Markt",
                    "lastStop": "S Hackescher Markt",
                    "lineName": {
                        "name": "M6",
                        "trafficType": "Tram"
                    }
                },
                {
                    "category": "Diversion",
                    "message": "Disruption",
                    "timePeriod": {
                        "from": "2014-07-02T04:00:00+0200",
                        "to": null
                    },
                    "reason": "Sperrung wegen Bauarbeiten",
                    "reasonShort": "Sperrung wegen Bauarbeiten",
                    "consequence": "Die Linie muss in Fahrtrichtung S+U Zoologischer Garten über Caroline-Michaelis-Str., Julie-Wolfthorn-Str., Zinnowitzer Str., Chausseestr., Habersaathstr. und Schwarzer Weg umgeleitet werden.",
                    "consequenceShort": "Bauarbeiten, Umleitung",
                    "location": {
                        "latitude": 52.53041916666667,
                        "longitude": 13.382412777777777,
                        "system": "WGS_84"
                    },
                    "source": "PT",
                    "affectedTrips": null,
                    "net": [],
                    "description": "Umleitung / geänderte Haltestellenbedienung",
                    "type": "PublicTransport",
                    "uri": null,
                    "provider": "vmz_trafficinfo",
                    "operator": "News",
                    "externalResourceId": "BVG54186",
                    "direction": "Beide",
                    "firstStop": "S Nordbahnhof/Gartenstr.",
                    "lastStop": "Invalidenpark",
                    "lineName": {
                        "name": "245",
                        "trafficType": "Bus"
                    }
                }
            ]



### Getting recent general incidents that affect public transport only in a specific area. [GET]
@testable

+ Response 200

    [List of public transport Incidents][]


# Group Service Categories

This is a group of all rest resources related to service categories available. Services offered by service provider have to be classified with one of these service categories.


## Service Categories [/imp-endpoint/api/V1/ServiceCategories] 

RESPONSE:
This collection contains a list of all currently available service categories in IMP. Each service category has the following attributes:

attribute | json data type | comments
--- | --- | ---
id | Number | internal id
name | String | Service Category name

+ Model (application/json)
    
        [
            {
                "id": 33,
                "name": "BikeSharing"
            },
            {
                "id": 126351,
                "name": "CarJourneyPlanner"
            },
            {
                "id": 32,
                "name": "CarSharing"
            },
            {
                "id": 34,
                "name": "EVCharging"
            },
            {
                "id": 38,
                "name": "GeoCoding"
            },
            {
                "id": 36,
                "name": "JourneyPlanner"
            },
            {
                "id": 28,
                "name": "Parking"
            },
            {
                "id": 29,
                "name": "PublicTransport"
            },
            {
                "id": 37,
                "name": "TaxiService"
            },
            {
                "id": 31,
                "name": "Ticketing"
            },
            {
                "id": 30,
                "name": "TrafficInfo"
            },
            {
                "id": 35,
                "name": "WMS"
            }
        ]



### Show service categories [GET]
@testable

+ Response 200
    
    [Service Categories][]
    
            

# Group Process Definitions

This is a group of all rest resources related to BPMN process definitions


## Process Definitions for Service Usage [/imp-endpoint/api/V1/ProcessDefinitions/ServiceUsage] 

RESPONSE:
This collection contains a list of process definitions of the type service usage. Each process has the following attributes:

attribute | json data type | comments
--- | --- | ---
id | String | process id
name | String | process name
description | String | 
processCategory | String | category of the process (ServiceUsage, ...)
requiredFeatures | Array | list of features (BOOKING, CANCELATION, etc.)

+ Model (application/json)
    
        [
            {
                "id": "bookingWithCancelation",
                "name": "Booking / Cancelation",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "BOOKING",
                    "CANCELATION"
                ]
            },
            {
                "id": "bookingWithoutCancelation",
                "name": "Booking",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "BOOKING"
                ]
            },
            {
                "id": "handyticketBookingProcess",
                "name": "HandyTicket Booking",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "BUY",
                    "CONFIRM"
                ]
            },
            {
                "id": "vmzParkingGarage",
                "name": "Parking Garage",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "CONSUME",
                    "RELEASE"
                ]
            }
        ]



### getting service usage BPMN process definitions [GET]
@testable

+ Response 200
    
    [Process Definitions for Service Usage ][]

## Process Definitions for Service Subscription [/imp-endpoint/api/V1/ProcessDefinitions/ServiceSubscription] 

RESPONSE:
This collection contains a list of process definitions of the type service subscription. Each process has the following attributes:

attribute | json data type | comments
--- | --- | ---
id | String | process id
name | String | process name
description | String | 
processCategory | String | category of the process (ServiceUsage, ...)
requiredFeatures | Array | list of features (BOOKING, CANCELATION, etc.)

+ Model (application/json)
    
        [
            {
                "id": "subscribePublicFree",
                "name": "Public & free",
                "description": null,
                "processCategory": "ServiceSubscription",
                "requiredFeatures": []
            },
            {
                "id": "subscribeWithAcceptance",
                "name": "Acceptance process",
                "description": null,
                "processCategory": "ServiceSubscription",
                "requiredFeatures": []
            },
            {
                "id": "subscribeWithAutomaticAcceptance",
                "name": "Automatic acceptance",
                "description": null,
                "processCategory": "ServiceSubscription",
                "requiredFeatures": []
            }
        ]



### getting a specific report [GET]
@testable

+ Response 200
    
    [Process Definitions for Service Subscription][]

# Group Reporting

This is a group of all rest resources related to reporting


## Report [/imp-endpoint/api/V1/Reporting/CustomReport?reportName={reportName}] 

RESPONSE:
The response contains an image representing the report.

+ Model (text/plain)
    
        



### getting all BPMN process definitions [GET]
@testable

REQUEST

+ Request

    + Headers
        
            accept: text/plain
            x-powered-by: Servlet/3.0 JSP/2.2 (GlassFish Server Open Source Edition 3.1.2.2 Java/Oracle Corporation/1.7)
            server: GlassFish Server Open Source Edition 3.1.2.2
            access-control-allow-origin: *
            access-control-allow-methods: GET, POST, PUT, DELETE, OPTIONS
            content-type: text/plain
            transfer-encoding: chunked
            
+ Parameters

    + reportName (string, `sp_revenue`) ... Reportname. Has example value. (possible report types: mp_revenue, info_request, book_request, total_revenue, availability)

+ Response 200 

    [Report][]